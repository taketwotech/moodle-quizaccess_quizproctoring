{"version":3,"file":"add_camera.min.js","sources":["../src/add_camera.js"],"sourcesContent":["/**\r\n * JavaScript class for Camera\r\n *\r\n * @subpackage quizproctoring\r\n * @copyright  2020 Mahendra Soni <ms@taketwotechnologies.com> {@link https://taketwotechnologies.com}\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\nwindow.addEventListener('beforeunload', function(event) {\r\n    event.stopImmediatePropagation();\r\n    event.returnValue = '';\r\n});\r\ndefine(['jquery', 'core/str', 'core/modal_factory'],\r\nfunction($, str, ModalFactory) {\r\n    var Camera = function(cmid, mainimage = false, attemptid = null, quizid) {\r\n        var docElement = $(document);\r\n        this.video = document.getElementById(this.videoid);\r\n        this.canvas = document.getElementById(this.canvasid);\r\n        this.cmid = cmid;\r\n        this.quizid = quizid;\r\n        this.mainimage = mainimage;\r\n        this.attemptid = attemptid;\r\n        $(\"#id_submitbutton\").prop(\"disabled\", true);\r\n        docElement.on('popup', this.showpopup.bind(this));\r\n    };\r\n\r\n    /** @type Tag element contain video. */\r\n    Camera.prototype.video = false;\r\n    /** @type String video elemend id. */\r\n    Camera.prototype.videoid = 'video';\r\n    /** @type Tag element contain canvas. */\r\n    Camera.prototype.canvas = false;\r\n    /** @type String video elemend id. */\r\n    Camera.prototype.canvasid = 'canvas';\r\n    /** @type int width of canvas object. */\r\n    Camera.prototype.width = 320;\r\n    /** @type int width of canvas object. */\r\n    Camera.prototype.height = 240;\r\n    /** @type String element contain takepicture button. */\r\n    Camera.prototype.takepictureid = 'takepicture';\r\n    /** @type String element contain retake button. */\r\n    Camera.prototype.retakeid = 'retake';\r\n    /** @type int course module id. */\r\n    Camera.prototype.cmid = false;\r\n    /** @type bool whether a main image or compare against an image. */\r\n    Camera.prototype.mainimage = false;\r\n     /** @type int attempt id. */\r\n    Camera.prototype.attemptid = false;\r\n     /** @type int quiz id. */\r\n    Camera.prototype.quizid = false;\r\n\r\n    Camera.prototype.startcamera = function() {\r\n        return navigator.mediaDevices.getUserMedia({video: true, audio: true})\r\n            .then(function(stream) {\r\n                const videoElement = document.getElementById('video');\r\n                if (videoElement) {\r\n                    videoElement.srcObject = stream;\r\n                    videoElement.muted = true;\r\n                    videoElement.playsinline = true;\r\n                    localMediaStream = stream;\r\n                    videoElement.play();\r\n                }\r\n                return videoElement; // Return videoElement or stream here\r\n            })\r\n            .catch(function() {\r\n                // Console.log(err);\r\n            });\r\n    };\r\n\r\n    Camera.prototype.takepicture = function() {\r\n        var context = this.canvas.getContext('2d');\r\n        context.drawImage(this.video, 0, 0, this.width, this.height);\r\n        var data = this.canvas.toDataURL('image/png');\r\n        $('#' + this.videoid).hide();\r\n        $('#' + this.takepictureid).hide();\r\n        $('#' + this.canvasid).show();\r\n        $('#' + this.retakeid).show();\r\n        $(\"input[name='userimg']\").val(data);\r\n        $(\"#id_submitbutton\").prop(\"disabled\", true);\r\n        $.ajax({\r\n            url: M.cfg.wwwroot + '/mod/quiz/accessrule/quizproctoring/ajax.php',\r\n            method: 'POST',\r\n            data: {imgBase64: data, cmid: this.cmid, attemptid: this.attemptid, mainimage: this.mainimage},\r\n            success: function(response) {\r\n                if (response && response.errorcode) {\r\n                    $(\"input[name='userimg']\").val('');\r\n                    $(document).trigger('popup', response.error);\r\n                } else {\r\n                    $(\"#id_submitbutton\").prop(\"disabled\", false);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    Camera.prototype.proctoringimage = function() {\r\n        var requestData = {\r\n            cmid: this.cmid,\r\n            attemptid: this.attemptid,\r\n            mainimage: this.mainimage\r\n        };\r\n        if (this.canvas) {\r\n            var context = this.canvas.getContext('2d');\r\n            context.drawImage(this.video, 0, 0, this.width, this.height);\r\n            var data = this.canvas.toDataURL('image/png');\r\n            requestData.imgBase64 = data;\r\n        }\r\n        $.ajax({\r\n            url: M.cfg.wwwroot + '/mod/quiz/accessrule/quizproctoring/ajax.php',\r\n            method: 'POST',\r\n            data: requestData,\r\n            success: function(response) {\r\n                if (response && response.errorcode) {\r\n                    $(document).trigger('popup', response.error);\r\n                } else {\r\n                    if (response.redirect && response.url) {\r\n                        window.onbeforeunload = null;\r\n                        $(document).trigger('popup', response.msg);\r\n                        setTimeout(function() {\r\n                            window.location.href = encodeURI(response.url);\r\n                        }, 3000);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    var signalingSocket = null;\r\n    var externalserver = 'https://proctoring.taketwotechnologies.com';\r\n    var localMediaStream = null;\r\n    var peers = {};\r\n    var peerId = null;\r\n    var peerMediaElements = {};\r\n    var connectedPeers = {};\r\n    var USE_AUDIO = true;\r\n    var USE_VIDEO = true;\r\n    var MUTE_AUDIO_BY_DEFAULT = true;\r\n    var attachMediaStream = null;\r\n    var stream = null;\r\n\r\n    var ICE_SERVERS = [{urls: \"stun:stun.l.google.com:19302\"}];\r\n\r\n    Camera.prototype.retake = function() {\r\n        $(\"input[name='userimg']\").val('');\r\n        $('#' + this.videoid).show(this.cmid);\r\n        $('#' + this.takepictureid).show();\r\n        $('#' + this.canvasid).hide();\r\n        $('#' + this.retakeid).hide();\r\n        $(\"#id_submitbutton\").prop(\"disabled\", true);\r\n    };\r\n    Camera.prototype.showpopup = function(event, message) {\r\n        return ModalFactory.create({\r\n            body: message,\r\n        }).then(function(modal) {\r\n            modal.show();\r\n            return null;\r\n        });\r\n    };\r\n\r\n    Camera.prototype.stopcamera = function() {\r\n        if (localMediaStream) {\r\n            localMediaStream.getTracks().forEach(function(track) {\r\n                track.stop();\r\n            });\r\n            localMediaStream = null;\r\n        }\r\n    };\r\n\r\n    var init = function(cmid, mainimage, verifyduringattempt = true, attemptid = null,\r\n        teacher, quizid, serviceoption, setinterval = 300) {\r\n        if (!verifyduringattempt) {\r\n            var camera;\r\n            camera = new Camera(cmid, mainimage, attemptid, quizid);\r\n            $('.quizstartbuttondiv [type=submit]').on('click', function() {\r\n                camera.startcamera();\r\n            });\r\n            // Take picture on button click\r\n            $('#' + camera.takepictureid).on('click', function(e) {\r\n                e.preventDefault();\r\n                camera.takepicture();\r\n            });\r\n            // Show video again when retake\r\n            $('#' + camera.retakeid).on('click', function(e) {\r\n                e.preventDefault();\r\n                camera.retake();\r\n            });\r\n            $('#id_cancel').on('click', function() {\r\n                camera.stopcamera();\r\n            });\r\n            $(document).on('click', '.closebutton', function() {\r\n                if (typeof camera !== 'undefined' && typeof camera.stopcamera === 'function') {\r\n                    camera.stopcamera();\r\n                }\r\n            });\r\n        } else {\r\n            signalingSocket = io(externalserver);\r\n            signalingSocket.on('connect', function() {\r\n            // Retrieve the session state from localStorage\r\n            var storedSession = localStorage.getItem('sessionState');\r\n            var sessionState = storedSession ? JSON.parse(storedSession) : null;\r\n           setupLocalMedia(cmid, mainimage, verifyduringattempt, attemptid,\r\n            teacher, setinterval, serviceoption, quizid, function() {\r\n                // Once User gives access to mic/cam, join the channel and start peering up\r\n                var teacherroom = getTeacherroom();\r\n                var typet = {\"type\": (teacherroom === 'teacher') ? 'teacher' : 'student'};\r\n\r\n                signalingSocket.emit('join', {\"room\": quizid, \"userdata\": {'quizid': quizid, 'type': typet}});\r\n\r\n                // Restore the session state if available\r\n                if (sessionState) {\r\n                    restoreSessionState(sessionState);\r\n                }\r\n            });\r\n        });\r\n\r\n        signalingSocket.on('disconnect', function() {\r\n            /* Tear down all of our peer connections and remove all\r\n             * media divs when we disconnect */\r\n\r\n            for (peerId in peerMediaElements) {\r\n                peerMediaElements[peerId].remove();\r\n            }\r\n            for (peerId in peers) {\r\n                peers[peerId].close();\r\n            }\r\n\r\n            peers = {};\r\n            peerMediaElements = {};\r\n        });\r\n\r\n        signalingSocket.on('addPeer', function(config) {\r\n            var peerId = config.peer_id;\r\n\r\n            if (peerId in peers) {\r\n                return;\r\n            }\r\n\r\n            var peerConnection = new RTCPeerConnection(\r\n                {\"iceServers\": ICE_SERVERS},\r\n                {\"optional\": [{\"DtlsSrtpKeyAgreement\": true}]}\r\n            );\r\n            peers[peerId] = peerConnection;\r\n            // Add peer to the connectedPeers object\r\n            connectedPeers[peerId] = {\r\n                stream: new MediaStream()\r\n            };\r\n\r\n            peerConnection.onicecandidate = function(event) {\r\n                if (event.candidate) {\r\n                    signalingSocket.emit('relayICECandidate', {\r\n                        'peer_id': peerId,\r\n                        'ice_candidate': {\r\n                            'sdpMLineIndex': event.candidate.sdpMLineIndex,\r\n                            'candidate': event.candidate.candidate\r\n                        }\r\n                    });\r\n                }\r\n            };\r\n\r\n            peerConnection.ontrack = function(event) {\r\n\r\n                // Update connectedPeers stream\r\n                connectedPeers[peerId].stream.addTrack(event.track);\r\n                var remoteMedia;\r\n\r\n                if (peerMediaElements[peerId]) {\r\n                    remoteMedia = peerMediaElements[peerId];\r\n                } else {\r\n                    remoteMedia = USE_VIDEO ? $(\"<video>\") : $(\"<audio>\");\r\n                    remoteMedia.attr(\"autoplay\", \"autoplay\");\r\n                    remoteMedia.attr(\"muted\", \"true\");\r\n                    remoteMedia.attr(\"controls\", \"\");\r\n                    remoteMedia.attr(\"class\", \"quizaccess_quizproctoring\");\r\n\r\n                    if (MUTE_AUDIO_BY_DEFAULT) {\r\n                        remoteMedia.attr(\"muted\", \"true\");\r\n                    }\r\n                    remoteMedia.attr(\"controls\", \"\");\r\n                    peerMediaElements[peerId] = remoteMedia;\r\n                    var teacherroom = getTeacherroom();\r\n                    if (teacherroom === 'teacher') {\r\n                        $('#region-main-box').append(remoteMedia);\r\n                        attachMediaStream(remoteMedia[0], connectedPeers[peerId].stream);\r\n                    }\r\n                }\r\n            };\r\n            // Add our local stream\r\n            peerConnection.addStream(localMediaStream);\r\n\r\n            if (config.should_create_offer) {\r\n                peerConnection.createOffer(\r\n                    function(localDescription) {\r\n                        peerConnection.setLocalDescription(localDescription,\r\n                            function() {\r\n                                signalingSocket.emit('relaySessionDescription',\r\n                                    {'peer_id': peerId, 'session_description': localDescription});\r\n                            }\r\n                        );\r\n                    },\r\n                    function() {\r\n                        // Error handling will be implemented later\r\n                    }\r\n                );\r\n            }\r\n        });\r\n\r\n                /**\r\n                 * Peers exchange session descriptions which contains information\r\n                 * about their audio / video settings and that sort of stuff. First\r\n                 * the 'offerer' sends a description to the 'answerer' (with type\r\n                 * \"offer\"), then the answerer sends one back (with type \"answer\").\r\n                 */\r\n                signalingSocket.on('sessionDescription', function(config) {\r\n                    var peerId = config.peer_id;\r\n                    var peer = peers[peerId];\r\n                    var remoteDescription = config.session_description;\r\n                    var desc = new RTCSessionDescription(remoteDescription);\r\n                    peer.setRemoteDescription(desc)\r\n                    .then(function() {\r\n                        if (remoteDescription.type === \"offer\") {\r\n                            return peer.createAnswer();\r\n                        }\r\n                        return null;\r\n                    })\r\n                    .then(function(localDescription) {\r\n                        if (localDescription) {\r\n                            return peer.setLocalDescription(localDescription);\r\n                        }\r\n                        return null;\r\n                    })\r\n                    .then(function() {\r\n                        if (peer.localDescription) {\r\n                            signalingSocket.emit('relaySessionDescription', {\r\n                                'peer_id': peerId,\r\n                                'session_description': peer.localDescription\r\n                            });\r\n                        }\r\n                        return null;\r\n                    })\r\n                    .catch(function(error) {\r\n                        throw error;\r\n                    });\r\n                });\r\n\r\n                /**\r\n                 * The offerer will send a number of ICE Candidate blobs to the answerer so they\r\n                 * can begin trying to find the best path to one another on the net.\r\n                 */\r\n                signalingSocket.on('iceCandidate', function(config) {\r\n                    var peer = peers[config.peer_id];\r\n                    var iceCandidate = config.ice_candidate;\r\n                    peer.addIceCandidate(new RTCIceCandidate(iceCandidate));\r\n                });\r\n                /**\r\n                 * When a user leaves a channel (or is disconnected from the\r\n                 * signaling server) everyone will recieve a 'removePeer' message\r\n                 * telling them to trash the media channels they have open for those\r\n                 * that peer. If it was this client that left a channel, they'll also\r\n                 * receive the removePeers. If this client was disconnected, they\r\n                 * wont receive removePeers, but rather the\r\n                 * signalingSocket.on('disconnect') code will kick in and tear down\r\n                 * all the peer sessions.\r\n                 */\r\n                    signalingSocket.on('removePeer', function(config) {\r\n                    var peerId = config.peer_id;\r\n\r\n                    if (!(peerId in peers)) {\r\n                        return;\r\n                    }\r\n\r\n                    // Close the peer connection\r\n                    peers[peerId].removeStream(connectedPeers[peerId].stream);\r\n                    peers[peerId].close();\r\n\r\n                    // Remove the peer from connectedPeers\r\n                    delete connectedPeers[peerId];\r\n\r\n                    var remoteMedia = peerMediaElements[peerId];\r\n                    if (remoteMedia) {\r\n                        remoteMedia.remove();\r\n                    }\r\n                    // Remove references\r\n                    delete peers[peerId];\r\n                    delete peerMediaElements[peerId];\r\n                });\r\n    }\r\n\r\n    };\r\n    return {\r\n        init: init\r\n    };\r\n\r\n    /**\r\n     * Setup Local Media\r\n     *\r\n     * @param {int} cmid - cmid\r\n     * @param {boolean} mainimage - boolean value\r\n     * @param {boolean} verifyduringattempt - boolean value\r\n     * @param {int} attemptid - Attempt Id\r\n     * @param {boolean} teacher - boolean value\r\n     * @param {bigint} setinterval - int value\r\n     * @param {Longtext} serviceoption - string value\r\n     * @param {int} quizid - int value\r\n     * @param {function} callback - The callback function to execute after setting up the media stream.\r\n     * @return {void}\r\n     */\r\n    function setupLocalMedia(cmid, mainimage, verifyduringattempt, attemptid,\r\n        teacher, setinterval, serviceoption, quizid, callback) {\r\n        require(['core/ajax'], function() {\r\n            if (localMediaStream !== null) {\r\n                if (callback) {\r\n                    callback();\r\n                }\r\n                return;\r\n            }\r\n\r\n            navigator.getUserMedia = (\r\n                navigator.getUserMedia ||\r\n                navigator.webkitGetUserMedia ||\r\n                navigator.mozGetUserMedia ||\r\n                navigator.msGetUserMedia\r\n            );\r\n\r\n            attachMediaStream = function(element, stream) {\r\n                element.srcObject = stream;\r\n            };\r\n\r\n            navigator.mediaDevices.getUserMedia({\"audio\": USE_AUDIO, \"video\": USE_VIDEO})\r\n                .then(function(stream) {\r\n                    localMediaStream = stream;\r\n                    if (verifyduringattempt) {\r\n                        var teacherroom = getTeacherroom();\r\n                        if (teacherroom !== 'teacher') {\r\n                            $('<canvas>').attr({id: 'canvas', width: '280',\r\n                                height: '240', 'style': 'display: none;'}).appendTo('body');\r\n                            $('<video>').attr({\r\n                                'id': 'video',\r\n                                'class': 'quizaccess_quizproctoring-video',\r\n                                'width': '280',\r\n                                'height': '240',\r\n                                'autoplay': 'autoplay'\r\n                            }).appendTo('body');\r\n                            document.addEventListener('visibilitychange', function() {\r\n                                if (document.visibilityState === 'visible') {\r\n                                   $.ajax({\r\n                                    url: M.cfg.wwwroot + '/mod/quiz/accessrule/quizproctoring/ajax.php',\r\n                                    method: 'POST',\r\n                                    data: {cmid: cmid, attemptid: attemptid, mainimage: mainimage, tab: true},\r\n                                        success: function(response) {\r\n                                            if (response && response.errorcode) {\r\n                                                $(document).trigger('popup', response.error);\r\n                                            } else {\r\n                                                if (response.redirect && response.url) {\r\n                                                    window.onbeforeunload = null;\r\n                                                    $(document).trigger('popup', response.msg);\r\n                                                    setTimeout(function() {\r\n                                                        window.location.href = encodeURI(response.url);\r\n                                                    }, 3000);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    });\r\n                                }\r\n                            });\r\n                            var camera = new Camera(cmid, mainimage, attemptid, quizid);\r\n                            camera.startcamera();\r\n                            setInterval(camera.proctoringimage.bind(camera), setinterval * 1000);\r\n                        }\r\n                    }\r\n                    return stream;\r\n                })\r\n                .catch(function() {\r\n                    // Handle the case where permission is denied\r\n                    if (verifyduringattempt) {\r\n                        var teacherroom = getTeacherroom();\r\n                        if (teacherroom !== 'teacher') {\r\n                            var camera = new Camera(cmid, mainimage, attemptid, quizid);\r\n                            camera.startcamera();\r\n                            setInterval(camera.proctoringimage.bind(camera), setinterval * 1000);\r\n                        }\r\n                    }\r\n                })\r\n                .finally(function() {\r\n                    if (callback) {\r\n                        callback();\r\n                    }\r\n                });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get Teacher room\r\n     *\r\n     * @return {string} teacher\r\n     */\r\n    function getTeacherroom() {\r\n        var urlParams = new URLSearchParams(window.location.search);\r\n        var teacher = urlParams.get('teacher');\r\n        return teacher;\r\n    }\r\n\r\n/**\r\n * RestoreSessionState\r\n *\r\n * @param {Longtext} sessionState sessionState\r\n */\r\nfunction restoreSessionState(sessionState) {\r\n    for (var peerId in sessionState.connectedPeers) {\r\n        if (sessionState.connectedPeers.hasOwnProperty(peerId)) {\r\n            var peer = sessionState.connectedPeers[peerId];\r\n\r\n            // Create RTCPeerConnection and add track\r\n            var peerConnection = new RTCPeerConnection(\r\n                {\"iceServers\": ICE_SERVERS},\r\n                {\"optional\": [{\"DtlsSrtpKeyAgreement\": true}]}\r\n            );\r\n\r\n            peers[peerId] = peerConnection;\r\n\r\n            setupPeerConnection(peerConnection, peerId, peer);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * SetupPeerConnection\r\n *\r\n * @param {Longtext} peerConnection peerConnection\r\n * @param {Longtext} peerId peerId\r\n * @param {Longtext} peer peer\r\n */\r\nfunction setupPeerConnection(peerConnection, peerId, peer) {\r\n    peerConnection.onicecandidate = function(event) {\r\n        if (event.candidate) {\r\n            signalingSocket.emit('relayICECandidate', {\r\n                'peer_id': peerId,\r\n                'ice_candidate': {\r\n                    'sdpMLineIndex': event.candidate.sdpMLineIndex,\r\n                    'candidate': event.candidate.candidate\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    peerConnection.ontrack = function(event) {\r\n        // Update connectedPeers stream\r\n        peer.stream.addTrack(event.track);\r\n\r\n        var remoteMedia;\r\n\r\n        if (peerMediaElements[peerId]) {\r\n            remoteMedia = peerMediaElements[peerId];\r\n        } else {\r\n            remoteMedia = USE_VIDEO ? $(\"<video>\") : $(\"<audio>\");\r\n            remoteMedia.attr(\"autoplay\", \"autoplay\");\r\n\r\n            if (MUTE_AUDIO_BY_DEFAULT) {\r\n                remoteMedia.attr(\"muted\", \"true\");\r\n            }\r\n            remoteMedia.attr(\"controls\", \"\");\r\n            peerMediaElements[peerId] = remoteMedia;\r\n            var teacherroom = getTeacherroom();\r\n            if (teacherroom === 'teacher') {\r\n                $('#region-main-box').append(remoteMedia);\r\n                attachMediaStream(remoteMedia[0], stream);\r\n            }\r\n        }\r\n        attachMediaStream(remoteMedia[0], peer.stream);\r\n    };\r\n\r\n    // Add our local stream\r\n    peerConnection.addStream(localMediaStream);\r\n\r\n    // Add existing tracks to the new connection\r\n    for (var track of peer.stream.getTracks()) {\r\n        peerConnection.addTrack(track, peer.stream);\r\n    }\r\n\r\n    // Create an offer\r\n    peerConnection.createOffer(\r\n        function(localDescription) {\r\n            peerConnection.setLocalDescription(localDescription,\r\n                function() {\r\n                    signalingSocket.emit('relaySessionDescription', {\r\n                        'peer_id': peerId,\r\n                        'session_description': localDescription\r\n                    });\r\n                }\r\n            );\r\n        });\r\n}\r\n});\r\n"],"names":["window","addEventListener","event","stopImmediatePropagation","returnValue","define","$","str","ModalFactory","Camera","cmid","mainimage","attemptid","quizid","docElement","document","video","getElementById","this","videoid","canvas","canvasid","prop","on","showpopup","bind","prototype","width","height","takepictureid","retakeid","startcamera","navigator","mediaDevices","getUserMedia","audio","then","stream","videoElement","srcObject","muted","playsinline","localMediaStream","play","catch","takepicture","getContext","drawImage","data","toDataURL","hide","show","val","ajax","url","M","cfg","wwwroot","method","imgBase64","success","response","errorcode","trigger","error","proctoringimage","requestData","redirect","onbeforeunload","msg","setTimeout","location","href","encodeURI","signalingSocket","peers","peerId","peerMediaElements","connectedPeers","attachMediaStream","ICE_SERVERS","urls","retake","message","create","body","modal","stopcamera","getTracks","forEach","track","stop","init","verifyduringattempt","teacher","serviceoption","setinterval","camera","io","storedSession","localStorage","getItem","sessionState","JSON","parse","setupLocalMedia","typet","getTeacherroom","emit","restoreSessionState","remove","close","config","peer_id","peerConnection","RTCPeerConnection","MediaStream","onicecandidate","candidate","sdpMLineIndex","ontrack","remoteMedia","addTrack","attr","append","addStream","should_create_offer","createOffer","localDescription","setLocalDescription","peer","remoteDescription","session_description","desc","RTCSessionDescription","setRemoteDescription","type","createAnswer","iceCandidate","ice_candidate","addIceCandidate","RTCIceCandidate","removeStream","e","preventDefault","callback","require","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","element","id","appendTo","visibilityState","tab","setInterval","finally","URLSearchParams","search","get","hasOwnProperty","setupPeerConnection"],"mappings":"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"}