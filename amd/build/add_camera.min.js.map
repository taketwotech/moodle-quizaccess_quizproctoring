{"version":3,"file":"add_camera.min.js","sources":["../src/add_camera.js"],"sourcesContent":["/**\n * JavaScript class for Camera\n *\n * @subpackage quizproctoring\n * @copyright  2020 Mahendra Soni <ms@taketwotechnologies.com> {@link https://taketwotechnologies.com}\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nwindow.addEventListener('beforeunload', function(event) {\n    event.stopImmediatePropagation();\n    event.returnValue = '';\n});\ndefine(['jquery', 'core/str', 'core/modal_factory'],\nfunction($, str, ModalFactory) {\n    var Camera = function(cmid, mainimage = false, attemptid = null, quizid) {\n        var docElement = $(document);\n        this.video = document.getElementById(this.videoid);\n        this.canvas = document.getElementById(this.canvasid);\n        this.cmid = cmid;\n        this.quizid = quizid;\n        this.mainimage = mainimage;\n        this.attemptid = attemptid;\n        $(\"#id_submitbutton\").prop(\"disabled\", true);\n        docElement.on('popup', this.showpopup.bind(this));\n\t       navigator.mediaDevices.getUserMedia({ video: true})\n    \t.then(function(stream) {\n        const videoElement = document.getElementById('video');\n        if (videoElement) {\n            videoElement.srcObject = stream;\n            videoElement.muted = true;  // Mute to avoid feedback loop with microphone\n            videoElement.playsinline = \"\";\n            localMediaStream = stream;\n            videoElement.play().catch(function(error) {\n                console.log('Autoplay prevented: ', error);\n            });\n        }\n    })\n    .catch(function(error) {\n        console.log('Error accessing media devices: ', error.name, error.message);\n    });\n    };\n\n    /** @type Tag element contain video. */\n    Camera.prototype.video = false;\n    /** @type String video elemend id. */\n    Camera.prototype.videoid = 'video';\n    /** @type Tag element contain canvas. */\n    Camera.prototype.canvas = false;\n    /** @type String video elemend id. */\n    Camera.prototype.canvasid = 'canvas';\n    /** @type int width of canvas object. */\n    Camera.prototype.width = 320;\n    /** @type int width of canvas object. */\n    Camera.prototype.height = 240;\n    /** @type String element contain takepicture button. */\n    Camera.prototype.takepictureid = 'takepicture';\n    /** @type String element contain retake button. */\n    Camera.prototype.retakeid = 'retake';\n    /** @type int course module id. */\n    Camera.prototype.cmid = false;\n    /** @type bool whether a main image or compare against an image. */\n    Camera.prototype.mainimage = false;\n     /** @type int attempt id. */\n    Camera.prototype.attemptid = false;\n     /** @type int quiz id. */\n    Camera.prototype.quizid = false;\n\n\n    Camera.prototype.takepicture = function() {\n        // Console.log('takepicture function');\n        var context = this.canvas.getContext('2d');\n        context.drawImage(this.video, 0, 0, this.width, this.height);\n        var data = this.canvas.toDataURL('image/png');\n        $('#' + this.videoid).hide();\n        $('#' + this.takepictureid).hide();\n        $('#' + this.canvasid).show();\n        $('#' + this.retakeid).show();\n        $(\"input[name='userimg']\").val(data);\n        $(\"#id_submitbutton\").prop(\"disabled\", true);\n        $.ajax({\n            url: M.cfg.wwwroot + '/mod/quiz/accessrule/quizproctoring/ajax.php',\n            method: 'POST',\n            data: {imgBase64: data, cmid: this.cmid, attemptid: this.attemptid, mainimage: this.mainimage},\n            success: function(response) {\n                if (response && response.errorcode) {\n                    // Console.log(response.errorcode);\n                    $(\"input[name='userimg']\").val('');\n                    $(document).trigger('popup', response.error);\n                } else {\n                    $(\"#id_submitbutton\").prop(\"disabled\", false);\n                }\n            }\n        });\n    };\n    Camera.prototype.proctoringimage = function() {\n        var requestData = {\n            cmid: this.cmid,\n            attemptid: this.attemptid,\n            mainimage: this.mainimage\n        };\n        if (this.canvas) {\n            var context = this.canvas.getContext('2d');\n            context.drawImage(this.video, 0, 0, this.width, this.height);\n            var data = this.canvas.toDataURL('image/png');\n            requestData.imgBase64 = data;\n        }\n        $.ajax({\n            url: M.cfg.wwwroot + '/mod/quiz/accessrule/quizproctoring/ajax.php',\n            method: 'POST',\n            data: requestData,\n            success: function(response) {\n                if (response && response.errorcode) {\n                    $(document).trigger('popup', response.error);\n                } else {\n                    if (response.redirect && response.url) {\n                        window.onbeforeunload = null;\n                        window.location.href = encodeURI(response.url);\n                    }\n                }\n            }\n        });\n    };\n\n    var signalingSocket = null;\n    var externalserver = 'https://proctoring.taketwotechnologies.com';\n    var localMediaStream = null;\n    var peers = {};\n    var peerId = null;\n    var peerMediaElements = {};\n    var connectedPeers = {};\n    var USE_AUDIO = true;\n    var USE_VIDEO = true;\n    var MUTE_AUDIO_BY_DEFAULT = true;\n    var attachMediaStream = null;\n    var stream = null;\n\n    var ICE_SERVERS = [{urls: \"stun:stun.l.google.com:19302\"}];\n\n    Camera.prototype.retake = function() {\n        $(\"input[name='userimg']\").val('');\n        $('#' + this.videoid).show(this.cmid);\n        $('#' + this.takepictureid).show();\n        $('#' + this.canvasid).hide();\n        $('#' + this.retakeid).hide();\n    };\n    Camera.prototype.showpopup = function(event, message) {\n        return ModalFactory.create({\n            body: message,\n        }).then(function(modal) {\n            modal.show();\n            return null;\n        });\n    };\n\n    var init = function(cmid, mainimage, verifyduringattempt = true, attemptid = null,\n        teacher, quizid, serviceoption, setinterval = 300) {\n        if (!verifyduringattempt) {\n            var camera;\n            camera = new Camera(cmid, mainimage, attemptid, quizid);\n            // Take picture on button click\n            $('#' + camera.takepictureid).on('click', function(e) {\n                e.preventDefault();\n                camera.takepicture();\n            });\n            // Show video again when retake\n            $('#' + camera.retakeid).on('click', function(e) {\n                e.preventDefault();\n                camera.retake();\n            });\n        } else {\n            signalingSocket = io(externalserver);\n            signalingSocket.on('connect', function() {\n            // Retrieve the session state from localStorage\n            var storedSession = localStorage.getItem('sessionState');\n            var sessionState = storedSession ? JSON.parse(storedSession) : null;\n           setupLocalMedia(cmid, mainimage, verifyduringattempt, attemptid,\n            teacher, setinterval, serviceoption, quizid, function() {\n                // Once User gives access to mic/cam, join the channel and start peering up\n                var teacherroom = getTeacherroom();\n                var typet = {\"type\": (teacherroom === 'teacher') ? 'teacher' : 'student'};\n\n                signalingSocket.emit('join', {\"room\": quizid, \"userdata\": {'quizid': quizid, 'type': typet}});\n\n                // Restore the session state if available\n                if (sessionState) {\n                    restoreSessionState(sessionState);\n                }\n            });\n        });\n\n        signalingSocket.on('disconnect', function() {\n            /* Tear down all of our peer connections and remove all\n             * media divs when we disconnect */\n\n            for (peerId in peerMediaElements) {\n                peerMediaElements[peerId].remove();\n            }\n            for (peerId in peers) {\n                peers[peerId].close();\n            }\n\n            peers = {};\n            peerMediaElements = {};\n        });\n\n        signalingSocket.on('addPeer', function(config) {\n            var peerId = config.peer_id;\n\n            if (peerId in peers) {\n                return;\n            }\n\n            var peerConnection = new RTCPeerConnection(\n                {\"iceServers\": ICE_SERVERS},\n                {\"optional\": [{\"DtlsSrtpKeyAgreement\": true}]}\n            );\n            peers[peerId] = peerConnection;\n            // Add peer to the connectedPeers object\n            connectedPeers[peerId] = {\n                stream: new MediaStream()\n            };\n\n            peerConnection.onicecandidate = function(event) {\n                if (event.candidate) {\n                    signalingSocket.emit('relayICECandidate', {\n                        'peer_id': peerId,\n                        'ice_candidate': {\n                            'sdpMLineIndex': event.candidate.sdpMLineIndex,\n                            'candidate': event.candidate.candidate\n                        }\n                    });\n                }\n            };\n\n            peerConnection.ontrack = function(event) {\n\n                // Update connectedPeers stream\n                connectedPeers[peerId].stream.addTrack(event.track);\n                var remoteMedia;\n\n                if (peerMediaElements[peerId]) {\n                    remoteMedia = peerMediaElements[peerId];\n                } else {\n                    remoteMedia = USE_VIDEO ? $(\"<video>\") : $(\"<audio>\");\n                    remoteMedia.attr(\"autoplay\", \"autoplay\");\n                    remoteMedia.attr(\"muted\", \"true\");\n                    remoteMedia.attr(\"controls\", \"\");\n                    remoteMedia.attr(\"class\", \"quizaccess_quizproctoring\");\n\n                    if (MUTE_AUDIO_BY_DEFAULT) {\n                        remoteMedia.attr(\"muted\", \"true\");\n                    }\n                    remoteMedia.attr(\"controls\", \"\");\n                    peerMediaElements[peerId] = remoteMedia;\n                    var teacherroom = getTeacherroom();\n                    if (teacherroom === 'teacher') {\n                        $('#region-main-box').append(remoteMedia);\n                        attachMediaStream(remoteMedia[0], connectedPeers[peerId].stream);\n                    }\n                }\n            };\n            // Add our local stream\n            peerConnection.addStream(localMediaStream);\n\n            if (config.should_create_offer) {\n                peerConnection.createOffer(\n                    function(localDescription) {\n                        peerConnection.setLocalDescription(localDescription,\n                            function() {\n                                signalingSocket.emit('relaySessionDescription',\n                                    {'peer_id': peerId, 'session_description': localDescription});\n                            }\n                        );\n                    },\n                    function() {\n                        // Error handling will be implemented later\n                    }\n                );\n            }\n        });\n\n                /**\n                 * Peers exchange session descriptions which contains information\n                 * about their audio / video settings and that sort of stuff. First\n                 * the 'offerer' sends a description to the 'answerer' (with type\n                 * \"offer\"), then the answerer sends one back (with type \"answer\").\n                 */\n                signalingSocket.on('sessionDescription', function(config) {\n                    var peerId = config.peer_id;\n                    var peer = peers[peerId];\n                    var remoteDescription = config.session_description;\n                    var desc = new RTCSessionDescription(remoteDescription);\n                    peer.setRemoteDescription(desc)\n                    .then(function() {\n                        if (remoteDescription.type === \"offer\") {\n                            return peer.createAnswer();\n                        }\n                        return null;\n                    })\n                    .then(function(localDescription) {\n                        if (localDescription) {\n                            return peer.setLocalDescription(localDescription);\n                        }\n                        return null;\n                    })\n                    .then(function() {\n                        if (peer.localDescription) {\n                            signalingSocket.emit('relaySessionDescription', {\n                                'peer_id': peerId,\n                                'session_description': peer.localDescription\n                            });\n                        }\n                        return null;\n                    })\n                    .catch(function(error) {\n                        throw error;\n                    });\n                });\n\n                /**\n                 * The offerer will send a number of ICE Candidate blobs to the answerer so they\n                 * can begin trying to find the best path to one another on the net.\n                 */\n                signalingSocket.on('iceCandidate', function(config) {\n                    var peer = peers[config.peer_id];\n                    var iceCandidate = config.ice_candidate;\n                    peer.addIceCandidate(new RTCIceCandidate(iceCandidate));\n                });\n                /**\n                 * When a user leaves a channel (or is disconnected from the\n                 * signaling server) everyone will recieve a 'removePeer' message\n                 * telling them to trash the media channels they have open for those\n                 * that peer. If it was this client that left a channel, they'll also\n                 * receive the removePeers. If this client was disconnected, they\n                 * wont receive removePeers, but rather the\n                 * signalingSocket.on('disconnect') code will kick in and tear down\n                 * all the peer sessions.\n                 */\n                    signalingSocket.on('removePeer', function(config) {\n                    var peerId = config.peer_id;\n\n                    if (!(peerId in peers)) {\n                        return;\n                    }\n\n                    // Close the peer connection\n                    peers[peerId].removeStream(connectedPeers[peerId].stream);\n                    peers[peerId].close();\n\n                    // Remove the peer from connectedPeers\n                    delete connectedPeers[peerId];\n\n                    var remoteMedia = peerMediaElements[peerId];\n                    if (remoteMedia) {\n                        remoteMedia.remove();\n                    }\n                    // Remove references\n                    delete peers[peerId];\n                    delete peerMediaElements[peerId];\n                });\n    }\n\n    };\n    return {\n        init: init\n    };\n\n    /**\n     * Setup Local Media\n     *\n     * @param {int} cmid - cmid\n     * @param {boolean} mainimage - boolean value\n     * @param {boolean} verifyduringattempt - boolean value\n     * @param {int} attemptid - Attempt Id\n     * @param {boolean} teacher - boolean value\n     * @param {bigint} setinterval - int value\n     * @param {Longtext} serviceoption - string value\n     * @param {int} quizid - int value\n     * @param {function} callback - The callback function to execute after setting up the media stream.\n     * @return {void}\n     */\n    function setupLocalMedia(cmid, mainimage, verifyduringattempt, attemptid,\n        teacher, setinterval, serviceoption, quizid, callback) {\n        require(['core/ajax'], function(ajax) {\n            if (localMediaStream !== null) {\n                if (callback) {\n                    callback();\n                }\n                return;\n            }\n\n            navigator.getUserMedia = (\n                navigator.getUserMedia ||\n                navigator.webkitGetUserMedia ||\n                navigator.mozGetUserMedia ||\n                navigator.msGetUserMedia\n            );\n\n            attachMediaStream = function(element, stream) {\n                element.srcObject = stream;\n            };\n\n            navigator.mediaDevices.getUserMedia({\"audio\": USE_AUDIO, \"video\": USE_VIDEO})\n                .then(function(stream) {\n                    localMediaStream = stream;\n                    if (verifyduringattempt) {\n                        var teacherroom = getTeacherroom();\n                        if (teacherroom !== 'teacher') {\n                            $('<canvas>').attr({id: 'canvas', width: '280',\n                                height: '240', 'style': 'display: none;'}).appendTo('body');\n                            $('<video>').attr({\n                                'id': 'video',\n                                'class': 'quizaccess_quizproctoring-video',\n                                'width': '280',\n                                'height': '240',\n                                'autoplay': 'autoplay'\n                            }).appendTo('body');\n                            document.addEventListener('visibilitychange', function() {\n                                if (document.visibilityState === 'visible') {\n                                   $.ajax({\n                                    url: M.cfg.wwwroot + '/mod/quiz/accessrule/quizproctoring/ajax.php',\n                                    method: 'POST',\n                                    data: {cmid: cmid, attemptid: attemptid, mainimage: mainimage, tab: true},\n                                        success: function(response) {\n                                            if (response && response.errorcode) {\n                                                $(document).trigger('popup', response.error);\n                                            } else {\n                                                if (response.redirect && response.url) {\n                                                    window.onbeforeunload = null;\n                                                    window.location.href = encodeURI(response.url);\n                                                }\n                                            }\n                                        }\n                                    })\n                                }\n                            });\n                            var camera = new Camera(cmid, mainimage, attemptid, quizid);\n                            setInterval(camera.proctoringimage.bind(camera), setinterval * 1000);\n                        }\n                    }\n                    return stream;\n                })\n                .catch(function() {\n                    // Handle the case where permission is denied\n                    if (verifyduringattempt) {\n                        var teacherroom = getTeacherroom();\n                        if (teacherroom !== 'teacher') {\n                            var camera = new Camera(cmid, mainimage, attemptid, quizid);\n                            setInterval(camera.proctoringimage.bind(camera), setinterval * 1000);\n                        }\n                    }\n                })\n                .finally(function() {\n                    if (callback) {\n                        callback();\n                    }\n                });\n        });\n    }\n\n    /**\n     * Get Teacher room\n     *\n     * @return {string} teacher\n     */\n    function getTeacherroom() {\n        var urlParams = new URLSearchParams(window.location.search);\n        var teacher = urlParams.get('teacher');\n        return teacher;\n    }\n\n/**\n * RestoreSessionState\n *\n * @param {Longtext} sessionState sessionState\n */\nfunction restoreSessionState(sessionState) {\n    for (var peerId in sessionState.connectedPeers) {\n        if (sessionState.connectedPeers.hasOwnProperty(peerId)) {\n            var peer = sessionState.connectedPeers[peerId];\n\n            // Create RTCPeerConnection and add track\n            var peerConnection = new RTCPeerConnection(\n                {\"iceServers\": ICE_SERVERS},\n                {\"optional\": [{\"DtlsSrtpKeyAgreement\": true}]}\n            );\n\n            peers[peerId] = peerConnection;\n\n            setupPeerConnection(peerConnection, peerId, peer);\n        }\n    }\n}\n\n/**\n * SetupPeerConnection\n *\n * @param {Longtext} peerConnection peerConnection\n * @param {Longtext} peerId peerId\n * @param {Longtext} peer peer\n */\nfunction setupPeerConnection(peerConnection, peerId, peer) {\n    peerConnection.onicecandidate = function(event) {\n        if (event.candidate) {\n            signalingSocket.emit('relayICECandidate', {\n                'peer_id': peerId,\n                'ice_candidate': {\n                    'sdpMLineIndex': event.candidate.sdpMLineIndex,\n                    'candidate': event.candidate.candidate\n                }\n            });\n        }\n    };\n\n    peerConnection.ontrack = function(event) {\n        // Update connectedPeers stream\n        peer.stream.addTrack(event.track);\n\n        var remoteMedia;\n\n        if (peerMediaElements[peerId]) {\n            remoteMedia = peerMediaElements[peerId];\n        } else {\n            remoteMedia = USE_VIDEO ? $(\"<video>\") : $(\"<audio>\");\n            remoteMedia.attr(\"autoplay\", \"autoplay\");\n\n            if (MUTE_AUDIO_BY_DEFAULT) {\n                remoteMedia.attr(\"muted\", \"true\");\n            }\n            remoteMedia.attr(\"controls\", \"\");\n            peerMediaElements[peerId] = remoteMedia;\n            var teacherroom = getTeacherroom();\n            if (teacherroom === 'teacher') {\n                $('#region-main-box').append(remoteMedia);\n                attachMediaStream(remoteMedia[0], stream);\n            }\n        }\n        attachMediaStream(remoteMedia[0], peer.stream);\n    };\n\n    // Add our local stream\n    peerConnection.addStream(localMediaStream);\n\n    // Add existing tracks to the new connection\n    for (var track of peer.stream.getTracks()) {\n        peerConnection.addTrack(track, peer.stream);\n    }\n\n    // Create an offer\n    peerConnection.createOffer(\n        function(localDescription) {\n            peerConnection.setLocalDescription(localDescription,\n                function() {\n                    signalingSocket.emit('relaySessionDescription', {\n                        'peer_id': peerId,\n                        'session_description': localDescription\n                    });\n                }\n            );\n        });\n}\n});\n"],"names":["window","addEventListener","event","stopImmediatePropagation","returnValue","define","$","str","ModalFactory","Camera","cmid","mainimage","attemptid","quizid","docElement","document","video","getElementById","this","videoid","canvas","canvasid","prop","on","showpopup","bind","navigator","mediaDevices","getUserMedia","then","stream","videoElement","srcObject","muted","playsinline","localMediaStream","play","catch","error","console","log","name","message","prototype","width","height","takepictureid","retakeid","takepicture","getContext","drawImage","data","toDataURL","hide","show","val","ajax","url","M","cfg","wwwroot","method","imgBase64","success","response","errorcode","trigger","proctoringimage","requestData","redirect","onbeforeunload","location","href","encodeURI","signalingSocket","peers","peerId","peerMediaElements","connectedPeers","attachMediaStream","ICE_SERVERS","urls","retake","create","body","modal","init","verifyduringattempt","teacher","serviceoption","setinterval","camera","io","storedSession","localStorage","getItem","sessionState","JSON","parse","setupLocalMedia","typet","getTeacherroom","emit","restoreSessionState","remove","close","config","peer_id","peerConnection","RTCPeerConnection","MediaStream","onicecandidate","candidate","sdpMLineIndex","ontrack","remoteMedia","addTrack","track","attr","append","addStream","should_create_offer","createOffer","localDescription","setLocalDescription","peer","remoteDescription","session_description","desc","RTCSessionDescription","setRemoteDescription","type","createAnswer","iceCandidate","ice_candidate","addIceCandidate","RTCIceCandidate","removeStream","e","preventDefault","callback","require","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","element","id","appendTo","visibilityState","tab","setInterval","finally","URLSearchParams","search","get","hasOwnProperty","setupPeerConnection","getTracks"],"mappings":"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"}