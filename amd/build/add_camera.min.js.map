{"version":3,"file":"add_camera.min.js","sources":["../src/add_camera.js"],"sourcesContent":["/**\r\n * JavaScript class for Camera\r\n *\r\n * @subpackage quizproctoring\r\n * @copyright  2020 Mahendra Soni <ms@taketwotechnologies.com> {@link https://taketwotechnologies.com}\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\nwindow.addEventListener('beforeunload', function(event) {\r\n    event.stopImmediatePropagation();\r\n    event.returnValue = '';\r\n});\r\ndefine(['jquery', 'core/str', 'core/modal_factory'],\r\nfunction($, str, ModalFactory) {\r\n    $('.quizstartbuttondiv [type=submit]').prop(\"disabled\", true);\r\n    var Camera = function(cmid, mainimage = false, attemptid = null, quizid) {\r\n        var docElement = $(document);\r\n        this.video = document.getElementById(this.videoid);\r\n        this.canvas = document.getElementById(this.canvasid);\r\n        this.cmid = cmid;\r\n        this.quizid = quizid;\r\n        this.mainimage = mainimage;\r\n        this.attemptid = attemptid;\r\n        $(\"#id_submitbutton\").prop(\"disabled\", true);\r\n        docElement.on('popup', this.showpopup.bind(this));\r\n    };\r\n\r\n    /** @type Tag element contain video. */\r\n    Camera.prototype.video = false;\r\n    /** @type String video elemend id. */\r\n    Camera.prototype.videoid = 'video';\r\n    /** @type Tag element contain canvas. */\r\n    Camera.prototype.canvas = false;\r\n    /** @type String video elemend id. */\r\n    Camera.prototype.canvasid = 'canvas';\r\n    /** @type int width of canvas object. */\r\n    Camera.prototype.width = 320;\r\n    /** @type int width of canvas object. */\r\n    Camera.prototype.height = 240;\r\n    /** @type String element contain takepicture button. */\r\n    Camera.prototype.takepictureid = 'takepicture';\r\n    /** @type String element contain retake button. */\r\n    Camera.prototype.retakeid = 'retake';\r\n    /** @type int course module id. */\r\n    Camera.prototype.cmid = false;\r\n    /** @type bool whether a main image or compare against an image. */\r\n    Camera.prototype.mainimage = false;\r\n     /** @type int attempt id. */\r\n    Camera.prototype.attemptid = false;\r\n     /** @type int quiz id. */\r\n    Camera.prototype.quizid = false;\r\n\r\n    Camera.prototype.startcamera = function() {\r\n        const takePictureButton = $('#' + this.takepictureid);\r\n        takePictureButton.prop('disabled', true);\r\n        return navigator.mediaDevices.getUserMedia({video: true, audio: true})\r\n            .then(function(stream) {\r\n                const videoElement = document.getElementById('video');\r\n                if (videoElement) {\r\n                    videoElement.srcObject = stream;\r\n                    videoElement.muted = true;\r\n                    videoElement.playsinline = true;\r\n                    localMediaStream = stream;\r\n                    videoElement.play();\r\n\r\n                    videoElement.addEventListener('contextmenu', function(e) {\r\n                        e.preventDefault();\r\n                    });\r\n\r\n                    stream.getVideoTracks()[0].onended = function() {\r\n                        takePictureButton.prop('disabled', true);\r\n                        $(document).trigger('popup', 'Camera or microphone is disabled. Please enable both to continue.');\r\n                    };\r\n\r\n                    const audioTrack = stream.getAudioTracks()[0];\r\n                    if (audioTrack) {\r\n                        audioTrack.onended = function() {\r\n                            $(document).trigger('popup', 'Camera or microphone is disabled. Please enable both to continue.');\r\n                        };\r\n                    } else {\r\n                        $(document).trigger('popup', 'Camera or microphone is disabled. Please enable both to continue.');\r\n                    }\r\n\r\n                    const savedPosition = JSON.parse(localStorage.getItem('videoPosition'));\r\n                    if (savedPosition) {\r\n                        videoElement.style.left = savedPosition.left;\r\n                        videoElement.style.top = savedPosition.top;\r\n                    }\r\n\r\n                    let offsetX;\r\n                    let offsetY;\r\n                    let isDragging = false;\r\n\r\n                    const stopDragging = function() {\r\n                        if (isDragging) {\r\n                            isDragging = false;\r\n                            videoElement.style.zIndex = 9999998;\r\n\r\n                            // Save position\r\n                            const position = {\r\n                                left: videoElement.style.left,\r\n                                top: videoElement.style.top,\r\n                            };\r\n                            localStorage.setItem('videoPosition', JSON.stringify(position));\r\n                        }\r\n                    };\r\n\r\n                    videoElement.addEventListener('mousedown', function(e) {\r\n                        isDragging = true;\r\n                        offsetX = e.clientX - videoElement.getBoundingClientRect().left;\r\n                        offsetY = e.clientY - videoElement.getBoundingClientRect().top;\r\n                        videoElement.style.zIndex = 9999999;\r\n                    });\r\n\r\n                    window.addEventListener('mousemove', function(e) {\r\n                        if (isDragging) {\r\n                            videoElement.style.left = `${e.clientX - offsetX}px`;\r\n                            videoElement.style.top = `${e.clientY - offsetY}px`;\r\n                        }\r\n                    });\r\n\r\n                    window.addEventListener('mouseup', stopDragging);\r\n\r\n                    // Additional safeguard: Cancel dragging if the mouse leaves the viewport\r\n                    window.addEventListener('mouseout', stopDragging);\r\n\r\n                    // Timeout fallback to stop dragging after a delay\r\n                    setInterval(() => {\r\n                        if (isDragging) {\r\n                            stopDragging();\r\n                        }\r\n                    }, 2000);\r\n\r\n                    takePictureButton.prop('disabled', false);\r\n                }\r\n                return videoElement;\r\n            })\r\n            .catch(function() {\r\n                takePictureButton.prop('disabled', true);\r\n            });\r\n    };\r\n\r\n    Camera.prototype.takepicture = function() {\r\n        var context = this.canvas.getContext('2d');\r\n        context.drawImage(this.video, 0, 0, this.width, this.height);\r\n        var data = this.canvas.toDataURL('image/png');\r\n        $('#' + this.videoid).hide();\r\n        $('#' + this.takepictureid).hide();\r\n        $('#' + this.canvasid).show();\r\n        $('#' + this.retakeid).show();\r\n        $(\"input[name='userimg']\").val(data);\r\n        $(\"#id_submitbutton\").prop(\"disabled\", true);\r\n        $.ajax({\r\n            url: M.cfg.wwwroot + '/mod/quiz/accessrule/quizproctoring/ajax.php',\r\n            method: 'POST',\r\n            data: {imgBase64: data, cmid: this.cmid, attemptid: this.attemptid, mainimage: this.mainimage},\r\n            success: function(response) {\r\n                if (response && response.errorcode) {\r\n                    $(\"input[name='userimg']\").val('');\r\n                    $(document).trigger('popup', response.error);\r\n                } else {\r\n                    $(\"#id_submitbutton\").prop(\"disabled\", false);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    Camera.prototype.proctoringimage = function() {\r\n        var requestData = {\r\n            cmid: this.cmid,\r\n            attemptid: this.attemptid,\r\n            mainimage: this.mainimage\r\n        };\r\n        if (this.canvas) {\r\n            var context = this.canvas.getContext('2d');\r\n            context.drawImage(this.video, 0, 0, this.width, this.height);\r\n            var data = this.canvas.toDataURL('image/png');\r\n            requestData.imgBase64 = data;\r\n        }\r\n        $.ajax({\r\n            url: M.cfg.wwwroot + '/mod/quiz/accessrule/quizproctoring/ajax.php',\r\n            method: 'POST',\r\n            data: requestData,\r\n            success: function(response) {\r\n                if (response && response.errorcode) {\r\n                    $(document).trigger('popup', response.error);\r\n                } else {\r\n                    if (response.redirect && response.url) {\r\n                        window.onbeforeunload = null;\r\n                        $(document).trigger('popup', response.msg);\r\n                        setTimeout(function() {\r\n                            window.location.href = encodeURI(response.url);\r\n                        }, 3000);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    Camera.prototype.resetcamera = function() {\r\n        var context = this.canvas.getContext('2d');\r\n        context.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n        $('#' + this.canvasid).hide();\r\n        $('#' + this.retakeid).hide();\r\n        $('#' + this.videoid).show();\r\n        $('#' + this.takepictureid).show();\r\n        $(\"input[name='userimg']\").val('');\r\n    };\r\n\r\n    var signalingSocket = null;\r\n    var externalserver = 'https://proctoring.taketwotechnologies.com';\r\n    var localMediaStream = null;\r\n    var peers = {};\r\n    var peerId = null;\r\n    var peerMediaElements = {};\r\n    var connectedPeers = {};\r\n    var USE_AUDIO = true;\r\n    var USE_VIDEO = true;\r\n    var MUTE_AUDIO_BY_DEFAULT = true;\r\n    var attachMediaStream = null;\r\n    var stream = null;\r\n    var total = 0;\r\n    let gazeDirection = null;\r\n    let gazeTimer = null;\r\n    const GAZE_THRESHOLD = 1000;\r\n    let eyeStatus = \"Open\";\r\n    let eyeTimer = null;\r\n    const EYE_THRESHOLD = 3000;\r\n    let lastDetectionTime = Date.now();\r\n    let lastDetection = Date.now();\r\n\r\n    var ICE_SERVERS = [{urls: \"stun:stun.l.google.com:19302\"}];\r\n\r\n    Camera.prototype.retake = function() {\r\n        $(\"input[name='userimg']\").val('');\r\n        $('#' + this.videoid).show(this.cmid);\r\n        $('#' + this.takepictureid).show();\r\n        $('#' + this.canvasid).hide();\r\n        $('#' + this.retakeid).hide();\r\n        $(\"#id_submitbutton\").prop(\"disabled\", true);\r\n    };\r\n    Camera.prototype.showpopup = function(event, message) {\r\n        if (this.activeModal) {\r\n            this.activeModal.hide();\r\n            this.activeModal.destroy();\r\n        }\r\n        return ModalFactory.create({\r\n            body: message,\r\n        }).then((modal) => {\r\n            this.activeModal = modal;\r\n            modal.show();\r\n            return null;\r\n        });\r\n    };\r\n\r\n    Camera.prototype.stopcamera = function() {\r\n        if (localMediaStream) {\r\n            localMediaStream.getTracks().forEach(function(track) {\r\n                track.stop();\r\n            });\r\n            localMediaStream = null;\r\n        }\r\n    };\r\n\r\n    var init = function(cmid, mainimage, verifyduringattempt = true, attemptid = null,\r\n        teacher, quizid, serviceoption, securewindow = null, userfullname = null,\r\n        enablestudentvideo = 1, enablestrictcheck = 0, setinterval = 300) {\r\n        const noStudentOnlineDiv = document.getElementById('nostudentonline');\r\n        if (!verifyduringattempt) {\r\n            var camera;\r\n            if (document.readyState === 'complete') {\r\n                $('.quizstartbuttondiv [type=submit]').prop(\"disabled\", false);\r\n            } else {\r\n                $(window).on('load', function() {\r\n                    $('.quizstartbuttondiv [type=submit]').prop(\"disabled\", false);\r\n                });\r\n            }\r\n            camera = new Camera(cmid, mainimage, attemptid, quizid);\r\n            $('.quizstartbuttondiv [type=submit]').on('click', function() {\r\n                localStorage.removeItem('videoPosition');\r\n                camera.startcamera();\r\n            });\r\n            // Take picture on button click\r\n            $('#' + camera.takepictureid).on('click', function(e) {\r\n                e.preventDefault();\r\n                camera.takepicture();\r\n            });\r\n            // Show video again when retake\r\n            $('#' + camera.retakeid).on('click', function(e) {\r\n                e.preventDefault();\r\n                camera.retake();\r\n            });\r\n            $('#id_cancel').on('click', function() {\r\n                camera.stopcamera();\r\n                camera.resetcamera();\r\n                $(\"#id_submitbutton\").prop(\"disabled\", true);\r\n                localStorage.removeItem('videoPosition');\r\n            });\r\n            $(document).on('click', '.closebutton', function() {\r\n                if (typeof camera !== 'undefined' && typeof camera.stopcamera === 'function') {\r\n                    camera.stopcamera();\r\n                    camera.resetcamera();\r\n                    $(\"#id_submitbutton\").prop(\"disabled\", true);\r\n                    localStorage.removeItem('videoPosition');\r\n                }\r\n            });\r\n            document.addEventListener('keydown', function(event) {\r\n                if (event.key === 'Escape') {\r\n                    camera.stopcamera();\r\n                    camera.resetcamera();\r\n                    $(\"#id_submitbutton\").prop(\"disabled\", true);\r\n                    localStorage.removeItem('videoPosition');\r\n                }\r\n            });\r\n            if (securewindow === 'securewindow') {\r\n                const currentUrl = window.location.href;\r\n                if (currentUrl.includes('startattempt.php')) {\r\n                    camera.startcamera();\r\n                }\r\n            }\r\n        } else {\r\n            document.addEventListener('keydown', function(event) {\r\n                if ((event.ctrlKey || event.metaKey) && (event.key === 'c' || event.key === 'v')) {\r\n                    event.preventDefault();\r\n                }\r\n            });\r\n            document.addEventListener('dragstart', function(event) {\r\n                event.preventDefault();\r\n            });\r\n\r\n            document.addEventListener('drop', function(event) {\r\n                event.preventDefault();\r\n            });\r\n            signalingSocket = io(externalserver);\r\n            signalingSocket.on('connect', function() {\r\n            // Retrieve the session state from localStorage\r\n            var storedSession = localStorage.getItem('sessionState');\r\n            var sessionState = storedSession ? JSON.parse(storedSession) : null;\r\n            setupLocalMedia(cmid, mainimage, verifyduringattempt, attemptid,\r\n            teacher, enablestudentvideo, enablestrictcheck, setinterval,\r\n            serviceoption, quizid, function() {\r\n                // Once User gives access to mic/cam, join the channel and start peering up\r\n                var teacherroom = getTeacherroom();\r\n                var typet = {\"type\": (teacherroom === 'teacher') ? 'teacher' : 'student'};\r\n                var fullname = userfullname;\r\n\r\n                signalingSocket.emit('join', {\"room\": quizid, \"userdata\": {'quizid': quizid,\r\n                    'type': typet, 'fullname': fullname}});\r\n\r\n                // Restore the session state if available\r\n                if (sessionState) {\r\n                    restoreSessionState(sessionState);\r\n                }\r\n            });\r\n        });\r\n\r\n        signalingSocket.on('disconnect', function() {\r\n            /* Tear down all of our peer connections and remove all\r\n             * media divs when we disconnect */\r\n\r\n            for (peerId in peerMediaElements) {\r\n                peerMediaElements[peerId].remove();\r\n            }\r\n            for (peerId in peers) {\r\n                peers[peerId].close();\r\n            }\r\n\r\n            peers = {};\r\n            peerMediaElements = {};\r\n        });\r\n\r\n        signalingSocket.on('addPeer', function(config) {\r\n            var peerId = config.peer_id;\r\n\r\n            if (peerId in peers) {\r\n                return;\r\n            }\r\n\r\n            var peerConnection = new RTCPeerConnection(\r\n                {\"iceServers\": ICE_SERVERS},\r\n                {\"optional\": [{\"DtlsSrtpKeyAgreement\": true}]}\r\n            );\r\n            peers[peerId] = peerConnection;\r\n            // Add peer to the connectedPeers object\r\n            connectedPeers[peerId] = {\r\n                stream: new MediaStream()\r\n            };\r\n\r\n            peerConnection.onicecandidate = function(event) {\r\n                if (event.candidate) {\r\n                    signalingSocket.emit('relayICECandidate', {\r\n                        'peer_id': peerId,\r\n                        'ice_candidate': {\r\n                            'sdpMLineIndex': event.candidate.sdpMLineIndex,\r\n                            'candidate': event.candidate.candidate\r\n                        }\r\n                    });\r\n                }\r\n            };\r\n\r\n            peerConnection.ontrack = function(event) {\r\n\r\n                // Update connectedPeers stream\r\n                connectedPeers[peerId].stream.addTrack(event.track);\r\n                var remoteMedia;\r\n\r\n                if (peerMediaElements[peerId]) {\r\n                    remoteMedia = peerMediaElements[peerId];\r\n                } else {\r\n                    remoteMedia = USE_VIDEO ? $(\"<video>\") : $(\"<audio>\");\r\n                    remoteMedia.attr(\"autoplay\", \"autoplay\");\r\n                    remoteMedia.attr(\"muted\", \"true\");\r\n                    remoteMedia.attr(\"controls\", \"\");\r\n                    remoteMedia.attr(\"class\", \"quizaccess_quizproctoring\");\r\n\r\n                    remoteMedia.attr(\"controls\", \"\");\r\n                    if ($('#region-main-box .videos-container').length === 0) {\r\n                        $('#region-main-box').append($(\"<div>\").addClass(\"videos-container\"));\r\n                    }\r\n\r\n                    var studentContainer = $(\"<div>\").addClass(\"student-container\");\r\n                    studentContainer.append(remoteMedia);\r\n\r\n                    peerMediaElements[peerId] = remoteMedia;\r\n                    var teacherroom = getTeacherroom();\r\n                    if (teacherroom === 'teacher') {\r\n                        total = total + 1;\r\n                        $('.videos-container').append(studentContainer);\r\n                        remoteMedia[0].srcObject = connectedPeers[peerId].stream;\r\n                    }\r\n                }\r\n            };\r\n            // Add our local stream\r\n            if (localMediaStream) {\r\n                if (noStudentOnlineDiv) {\r\n                    noStudentOnlineDiv.style.display = 'none';\r\n                }\r\n                peerConnection.addStream(localMediaStream);\r\n            }\r\n            if (config.should_create_offer) {\r\n                peerConnection.createOffer(\r\n                    function(localDescription) {\r\n                        peerConnection.setLocalDescription(localDescription,\r\n                            function() {\r\n                                signalingSocket.emit('relaySessionDescription',\r\n                                    {'peer_id': peerId, 'session_description': localDescription});\r\n                            }\r\n                        );\r\n                    },\r\n                    function() {\r\n                        // Error handling will be implemented later\r\n                    }\r\n                );\r\n            }\r\n        });\r\n\r\n                /**\r\n                 * Peers exchange session descriptions which contains information\r\n                 * about their audio / video settings and that sort of stuff. First\r\n                 * the 'offerer' sends a description to the 'answerer' (with type\r\n                 * \"offer\"), then the answerer sends one back (with type \"answer\").\r\n                 */\r\n                signalingSocket.on('sessionDescription', function(config) {\r\n                    var peerId = config.peer_id;\r\n                    var peer = peers[peerId];\r\n                    var remoteDescription = config.session_description;\r\n                    var desc = new RTCSessionDescription(remoteDescription);\r\n                    peer.setRemoteDescription(desc)\r\n                    .then(function() {\r\n                        if (remoteDescription.type === \"offer\") {\r\n                            return peer.createAnswer();\r\n                        }\r\n                        return null;\r\n                    })\r\n                    .then(function(localDescription) {\r\n                        if (localDescription) {\r\n                            return peer.setLocalDescription(localDescription);\r\n                        }\r\n                        return null;\r\n                    })\r\n                    .then(function() {\r\n                        if (peer.localDescription) {\r\n                            signalingSocket.emit('relaySessionDescription', {\r\n                                'peer_id': peerId,\r\n                                'session_description': peer.localDescription\r\n                            });\r\n                        }\r\n                        return null;\r\n                    })\r\n                    .catch(function(error) {\r\n                        throw error;\r\n                    });\r\n                });\r\n\r\n                /**\r\n                 * The offerer will send a number of ICE Candidate blobs to the answerer so they\r\n                 * can begin trying to find the best path to one another on the net.\r\n                 */\r\n                signalingSocket.on('iceCandidate', function(config) {\r\n                    var peer = peers[config.peer_id];\r\n                    var iceCandidate = config.ice_candidate;\r\n                    peer.addIceCandidate(new RTCIceCandidate(iceCandidate));\r\n                });\r\n                /**\r\n                 * When a user leaves a channel (or is disconnected from the\r\n                 * signaling server) everyone will recieve a 'removePeer' message\r\n                 * telling them to trash the media channels they have open for those\r\n                 * that peer. If it was this client that left a channel, they'll also\r\n                 * receive the removePeers. If this client was disconnected, they\r\n                 * wont receive removePeers, but rather the\r\n                 * signalingSocket.on('disconnect') code will kick in and tear down\r\n                 * all the peer sessions.\r\n                 */\r\n                    signalingSocket.on('removePeer', function(config) {\r\n                    var peerId = config.peer_id;\r\n\r\n                    if (!(peerId in peers)) {\r\n                        return;\r\n                    }\r\n\r\n                    // Close the peer connection\r\n                    peers[peerId].removeStream(connectedPeers[peerId].stream);\r\n                    peers[peerId].close();\r\n\r\n                    // Remove the peer from connectedPeers\r\n                    delete connectedPeers[peerId];\r\n\r\n                    var remoteMedia = peerMediaElements[peerId];\r\n                    if (remoteMedia) {\r\n                        total = total - 1;\r\n                        if (total === 0) {\r\n                            noStudentOnlineDiv.style.display = 'block';\r\n                        }\r\n                        remoteMedia.closest('.student-container').remove();\r\n                    }\r\n                    // Remove references\r\n                    delete peers[peerId];\r\n                    delete peerMediaElements[peerId];\r\n                });\r\n    }\r\n\r\n    };\r\n    return {\r\n        init: init\r\n    };\r\n\r\n    /**\r\n     * Setup Local Media\r\n     *\r\n     * @param {int} cmid - cmid\r\n     * @param {boolean} mainimage - boolean value\r\n     * @param {boolean} verifyduringattempt - boolean value\r\n     * @param {int} attemptid - Attempt Id\r\n     * @param {boolean} teacher - boolean value\r\n     * @param {boolean} enablestudentvideo - boolean value\r\n     * @param {boolean} enablestrictcheck - boolean value\r\n     * @param {bigint} setinterval - int value\r\n     * @param {Longtext} serviceoption - string value\r\n     * @param {int} quizid - int value\r\n     * @param {function} callback - The callback function to execute after setting up the media stream.\r\n     * @return {void}\r\n     */\r\n    function setupLocalMedia(cmid, mainimage, verifyduringattempt, attemptid,\r\n        teacher, enablestudentvideo,  enablestrictcheck,\r\n        setinterval, serviceoption, quizid, callback) {\r\n        require(['core/ajax'], function() {\r\n            if (localMediaStream !== null) {\r\n                if (callback) {\r\n                    callback();\r\n                }\r\n                return;\r\n            }\r\n            var teacherroom = getTeacherroom();\r\n            if (teacherroom !== 'teacher') {\r\n                navigator.getUserMedia = (\r\n                    navigator.getUserMedia ||\r\n                    navigator.webkitGetUserMedia ||\r\n                    navigator.mozGetUserMedia ||\r\n                    navigator.msGetUserMedia\r\n                );\r\n\r\n                attachMediaStream = function(element, stream) {\r\n                    element.srcObject = stream;\r\n                };\r\n\r\n                navigator.mediaDevices.getUserMedia({\"audio\": USE_AUDIO, \"video\": USE_VIDEO})\r\n                .then(function(stream) {\r\n                    localMediaStream = stream;\r\n                    if (verifyduringattempt) {\r\n                        $('<canvas>').attr({id: 'canvas', width: '280',\r\n                            height: '240', 'style': 'display: none;'}).appendTo('body');\r\n                        $('<video>').attr({\r\n                            'id': 'video',\r\n                            'class': 'quizaccess_quizproctoring-video',\r\n                            'width': '280',\r\n                            'height': '240',\r\n                            'autoplay': 'autoplay'\r\n                        }).css('display', enablestudentvideo ? 'block' : 'none')\r\n                          .appendTo('body');\r\n                        document.addEventListener('visibilitychange', function() {\r\n                            if (document.visibilityState === 'visible') {\r\n                               $.ajax({\r\n                                url: M.cfg.wwwroot + '/mod/quiz/accessrule/quizproctoring/ajax.php',\r\n                                method: 'POST',\r\n                                data: {cmid: cmid, attemptid: attemptid, mainimage: mainimage, tab: true},\r\n                                    success: function(response) {\r\n                                        if (response && response.errorcode) {\r\n                                            $(document).trigger('popup', response.error);\r\n                                        } else {\r\n                                            if (response.redirect && response.url) {\r\n                                                window.onbeforeunload = null;\r\n                                                $(document).trigger('popup', response.msg);\r\n                                                setTimeout(function() {\r\n                                                    window.location.href = encodeURI(response.url);\r\n                                                }, 3000);\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                });\r\n                            }\r\n                        });\r\n                        var camera = new Camera(cmid, mainimage, attemptid, quizid);\r\n                        camera.startcamera();\r\n                        setInterval(camera.proctoringimage.bind(camera), setinterval * 1000);\r\n                        if (serviceoption != 'AWS') {\r\n                            const videoElement = document.getElementById('video');\r\n                            const canvasElement = document.getElementById('canvas');\r\n                            /**\r\n                             * Get process frame\r\n                             *\r\n                             * @return {void} This function does not return a value.\r\n                             */\r\n                            function processFrame() {\r\n                                if (videoElement.readyState < 2) {\r\n                                    setTimeout(processFrame, 1000);\r\n                                    return;\r\n                                }\r\n                                setupFaceMesh(videoElement, canvasElement, cmid,\r\n                                    attemptid, mainimage, enablestrictcheck);\r\n                                setTimeout(processFrame, 500);\r\n                            }\r\n                            if (videoElement && canvasElement) {\r\n                                videoElement.addEventListener('loadeddata', () => {\r\n                                    videoElement.play();\r\n                                    processFrame();\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                    return stream;\r\n                })\r\n                .catch(function(error) {\r\n                    // Handle the case where permission is denied\r\n                    if (verifyduringattempt) {\r\n                        var teacherroom = getTeacherroom();\r\n                        if (teacherroom !== 'teacher') {\r\n                            var camera = new Camera(cmid, mainimage, attemptid, quizid);\r\n                            camera.startcamera();\r\n                            setInterval(camera.proctoringimage.bind(camera), setinterval * 1000);\r\n                        }\r\n                    }\r\n                    throw error;\r\n                })\r\n                .finally(function() {\r\n                    if (callback) {\r\n                        callback();\r\n                    }\r\n                });\r\n            } else {\r\n                localMediaStream = createDummyMediaStream();\r\n                if (callback) {\r\n                    callback();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Create Dummy Media Stream\r\n     *\r\n     * @return {string} dummyStream\r\n     */\r\n     function createDummyMediaStream() {\r\n        const audioContext = new AudioContext();\r\n        const dummyAudio = audioContext.createMediaStreamDestination();\r\n        const dummyVideo = document.createElement('canvas').captureStream(0);\r\n\r\n        // Combine audio and video into a dummy MediaStream\r\n        const dummyStream = new MediaStream();\r\n        dummyStream.addTrack(dummyAudio.stream.getAudioTracks()[0]);\r\n        dummyStream.addTrack(dummyVideo.getVideoTracks()[0]);\r\n        return dummyStream;\r\n    }\r\n\r\n    /**\r\n     * Get Teacher room\r\n     *\r\n     * @return {string} teacher\r\n     */\r\n    function getTeacherroom() {\r\n        var urlParams = new URLSearchParams(window.location.search);\r\n        var teacher = urlParams.get('teacher');\r\n        return teacher;\r\n    }\r\n\r\n/**\r\n * RestoreSessionState\r\n *\r\n * @param {Longtext} sessionState sessionState\r\n */\r\nfunction restoreSessionState(sessionState) {\r\n    for (var peerId in sessionState.connectedPeers) {\r\n        if (sessionState.connectedPeers.hasOwnProperty(peerId)) {\r\n            var peer = sessionState.connectedPeers[peerId];\r\n\r\n            // Create RTCPeerConnection and add track\r\n            var peerConnection = new RTCPeerConnection(\r\n                {\"iceServers\": ICE_SERVERS},\r\n                {\"optional\": [{\"DtlsSrtpKeyAgreement\": true}]}\r\n            );\r\n\r\n            peers[peerId] = peerConnection;\r\n\r\n            setupPeerConnection(peerConnection, peerId, peer);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * SetupPeerConnection\r\n *\r\n * @param {Longtext} peerConnection peerConnection\r\n * @param {Longtext} peerId peerId\r\n * @param {Longtext} peer peer\r\n */\r\nfunction setupPeerConnection(peerConnection, peerId, peer) {\r\n    peerConnection.onicecandidate = function(event) {\r\n        if (event.candidate) {\r\n            signalingSocket.emit('relayICECandidate', {\r\n                'peer_id': peerId,\r\n                'ice_candidate': {\r\n                    'sdpMLineIndex': event.candidate.sdpMLineIndex,\r\n                    'candidate': event.candidate.candidate\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    peerConnection.ontrack = function(event) {\r\n        // Update connectedPeers stream\r\n        peer.stream.addTrack(event.track);\r\n\r\n        var remoteMedia;\r\n\r\n        if (peerMediaElements[peerId]) {\r\n            remoteMedia = peerMediaElements[peerId];\r\n        } else {\r\n            remoteMedia = USE_VIDEO ? $(\"<video>\") : $(\"<audio>\");\r\n            remoteMedia.attr(\"autoplay\", \"autoplay\");\r\n\r\n            if (MUTE_AUDIO_BY_DEFAULT) {\r\n                remoteMedia.attr(\"muted\", \"true\");\r\n            }\r\n            remoteMedia.attr(\"controls\", \"\");\r\n            peerMediaElements[peerId] = remoteMedia;\r\n            var teacherroom = getTeacherroom();\r\n            if (teacherroom === 'teacher') {\r\n                $('#region-main-box').append(remoteMedia);\r\n                attachMediaStream(remoteMedia[0], stream);\r\n            }\r\n        }\r\n        attachMediaStream(remoteMedia[0], peer.stream);\r\n    };\r\n\r\n    // Add our local stream\r\n    peerConnection.addStream(localMediaStream);\r\n\r\n    // Add existing tracks to the new connection\r\n    for (var track of peer.stream.getTracks()) {\r\n        peerConnection.addTrack(track, peer.stream);\r\n    }\r\n\r\n    // Create an offer\r\n    peerConnection.createOffer(\r\n        function(localDescription) {\r\n            peerConnection.setLocalDescription(localDescription,\r\n                function() {\r\n                    signalingSocket.emit('relaySessionDescription', {\r\n                        'peer_id': peerId,\r\n                        'session_description': localDescription\r\n                    });\r\n                }\r\n            );\r\n        });\r\n}\r\n\r\n/**\r\n * SetupFaceMesh\r\n *\r\n * @param {Longtext} videoElement videoElement\r\n * @param {Longtext} canvasElement canvasElement\r\n * @param {int} cmid - cmid\r\n * @param {int} attemptid - Attempt Id\r\n * @param {boolean} mainimage - boolean value\r\n * @param {boolean} enablestrictcheck - boolean value\r\n */\r\nfunction setupFaceMesh(videoElement, canvasElement, cmid, attemptid, mainimage, enablestrictcheck) {\r\n    const canvasCtx = canvasElement.getContext('2d');\r\n    const faceMesh = new FaceMesh({\r\n        locateFile: (file) => {\r\n            return `${M.cfg.wwwroot}/mod/quiz/accessrule/quizproctoring/libraries/facemesh/${file}`;\r\n        }\r\n    });\r\n    faceMesh.setOptions({\r\n        maxNumFaces: 5,\r\n        refineLandmarks: true,\r\n    });\r\n    faceMesh.onResults((results) => {\r\n        canvasCtx.save();\r\n        canvasCtx.clearRect(0, 0, canvasElement.width, canvasElement.height);\r\n        canvasCtx.drawImage(results.image, 0, 0, canvasElement.width, canvasElement.height);\r\n        var data = canvasElement.toDataURL('image/png');\r\n        const currentTime = Date.now();\r\n        if (currentTime - lastDetectionTime >= 5000) {console.log('5 sec');\r\n            if (typeof results.multiFaceLandmarks === 'undefined') {\r\n                realtimeDetection(cmid, attemptid, mainimage, 'noface', data);\r\n            } else {\r\n                if (results.multiFaceLandmarks) {\r\n                    if (results.multiFaceLandmarks.length > 1) {\r\n                        realtimeDetection(cmid, attemptid, mainimage, 'multiface', data);\r\n                    }                    \r\n                }\r\n            }\r\n            lastDetectionTime = currentTime;\r\n        }\r\n        if (enablestrictcheck === 1 && results.multiFaceLandmarks.length === 1) {\r\n            results.multiFaceLandmarks.forEach(landmarks => {\r\n                detectGazeDirection(landmarks, cmid, attemptid, mainimage, data);\r\n                if (currentTime - lastDetection >= 4000) {console.log('4 sec');\r\n                    detectEyeStatus(landmarks, cmid, attemptid, mainimage, data);\r\n                    lastDetection = currentTime;\r\n                }\r\n            });\r\n        }\r\n        canvasCtx.restore();\r\n    });\r\n    faceMesh.send({image: videoElement});\r\n}\r\n\r\n/**\r\n * Realtime Detection Ajax call\r\n *\r\n * @param {int} cmid - cmid\r\n * @param {int} attemptid - Attempt Id\r\n * @param {boolean} mainimage - boolean value\r\n * @param {string} face string value\r\n * @param {Longtext} data video\r\n * @return {void}\r\n */\r\nfunction realtimeDetection(cmid, attemptid, mainimage, face, data) {\r\n    var requestData = {\r\n        cmid: cmid,\r\n        attemptid: attemptid,\r\n        mainimage: mainimage,\r\n        validate: face,\r\n        imgBase64: data,\r\n    };\r\n    $.ajax({\r\n        url: M.cfg.wwwroot + '/mod/quiz/accessrule/quizproctoring/ajax_realtime.php',\r\n        method: 'POST',\r\n        data: requestData,\r\n        success: function(response) {\r\n            if (response && response.errorcode) {\r\n                $(document).trigger('popup', response.error);\r\n            } else {\r\n                if (response.redirect && response.url) {\r\n                    window.onbeforeunload = null;\r\n                    $(document).trigger('popup', response.msg);\r\n                    setTimeout(function() {\r\n                        window.location.href = encodeURI(response.url);\r\n                    }, 3000);\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Detect Gaze Direction\r\n *\r\n * @param {Longtext} landmarks - landmarks\r\n * @param {int} cmid - cmid\r\n * @param {int} attemptid - Attempt Id\r\n * @param {boolean} mainimage - boolean value\r\n * @param {Longtext} data video\r\n * @return {void}\r\n */\r\nfunction detectGazeDirection(landmarks, cmid, attemptid, mainimage, data) {\r\n    const leftEye = landmarks[33];\r\n    const rightEye = landmarks[263];\r\n    const nose = landmarks[1];\r\n    const eyeMidpointX = (leftEye.x + rightEye.x) / 2;\r\n    const noseX = nose.x;\r\n\r\n    let currentDirection = \"Center\";\r\n\r\n    if (noseX < eyeMidpointX - 0.02) {\r\n        currentDirection = \"Right\";\r\n    } else if (noseX > eyeMidpointX + 0.02) {\r\n        currentDirection = \"Left\";\r\n    }\r\n\r\n    if (currentDirection !== gazeDirection) {\r\n        gazeDirection = currentDirection;\r\n\r\n        if (gazeTimer) {\r\n            clearTimeout(gazeTimer);\r\n            gazeTimer = null;\r\n        }\r\n    }\r\n\r\n    if (gazeDirection !== \"Center\") {\r\n        if (!gazeTimer) {\r\n            gazeTimer = setTimeout(() => {\r\n                realtimeDetection(cmid, attemptid, mainimage, '' + gazeDirection + '', data);\r\n            }, GAZE_THRESHOLD);\r\n        }\r\n    } else {\r\n        if (gazeTimer) {\r\n            clearTimeout(gazeTimer);\r\n            gazeTimer = null;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Detect Eye Status\r\n *\r\n * @param {Longtext} landmarks - landmarks\r\n * @param {int} cmid - cmid\r\n * @param {int} attemptid - Attempt Id\r\n * @param {boolean} mainimage - boolean value\r\n * @param {Longtext} data video\r\n * @return {void}\r\n */\r\nfunction detectEyeStatus(landmarks, cmid, attemptid, mainimage, data) {\r\n    const leftEyeUpper = landmarks[159];\r\n    const leftEyeLower = landmarks[145];\r\n    const rightEyeUpper = landmarks[386];\r\n    const rightEyeLower = landmarks[374];\r\n\r\n    const leftEyeOpen = Math.abs(leftEyeUpper.y - leftEyeLower.y);\r\n    const rightEyeOpen = Math.abs(rightEyeUpper.y - rightEyeLower.y);\r\n\r\n    const EYE_OPEN_THRESHOLD = 0.018;\r\n\r\n    let currentEyeStatus = (leftEyeOpen > EYE_OPEN_THRESHOLD &&\r\n        rightEyeOpen > EYE_OPEN_THRESHOLD) ? \"Open\" : \"Closed\";\r\n    if (currentEyeStatus !== eyeStatus) {\r\n        eyeStatus = currentEyeStatus;\r\n        if (eyeTimer) {\r\n            clearTimeout(eyeTimer);\r\n            eyeTimer = null;\r\n        }\r\n    }\r\n    if (eyeStatus === \"Closed\") {\r\n        if (!eyeTimer) {\r\n            eyeTimer = setTimeout(() => {\r\n                realtimeDetection(cmid, attemptid, mainimage, 'eyesnotopen', data);\r\n            }, EYE_THRESHOLD);\r\n        }\r\n    } else {\r\n        if (eyeTimer) {\r\n            clearTimeout(eyeTimer);\r\n            eyeTimer = null;\r\n        }\r\n    }\r\n}\r\n});\r\n"],"names":["window","addEventListener","event","stopImmediatePropagation","returnValue","define","$","str","ModalFactory","prop","Camera","cmid","mainimage","attemptid","quizid","docElement","document","video","getElementById","this","videoid","canvas","canvasid","on","showpopup","bind","prototype","width","height","takepictureid","retakeid","startcamera","takePictureButton","navigator","mediaDevices","getUserMedia","audio","then","stream","videoElement","srcObject","muted","playsinline","localMediaStream","play","e","preventDefault","getVideoTracks","onended","trigger","audioTrack","getAudioTracks","savedPosition","JSON","parse","localStorage","getItem","offsetX","offsetY","style","left","top","isDragging","stopDragging","zIndex","position","setItem","stringify","clientX","getBoundingClientRect","clientY","setInterval","catch","takepicture","getContext","drawImage","data","toDataURL","hide","show","val","ajax","url","M","cfg","wwwroot","method","imgBase64","success","response","errorcode","error","proctoringimage","requestData","redirect","onbeforeunload","msg","setTimeout","location","href","encodeURI","resetcamera","clearRect","signalingSocket","peers","peerId","peerMediaElements","connectedPeers","attachMediaStream","total","gazeDirection","gazeTimer","eyeStatus","eyeTimer","lastDetectionTime","Date","now","lastDetection","ICE_SERVERS","urls","retake","message","activeModal","destroy","create","body","modal","stopcamera","getTracks","forEach","track","stop","init","verifyduringattempt","teacher","serviceoption","securewindow","userfullname","enablestudentvideo","enablestrictcheck","setinterval","noStudentOnlineDiv","camera","ctrlKey","metaKey","key","io","storedSession","sessionState","setupLocalMedia","typet","getTeacherroom","fullname","emit","restoreSessionState","remove","close","config","peer_id","peerConnection","RTCPeerConnection","MediaStream","onicecandidate","candidate","sdpMLineIndex","ontrack","remoteMedia","addTrack","attr","length","append","addClass","studentContainer","display","addStream","should_create_offer","createOffer","localDescription","setLocalDescription","peer","remoteDescription","session_description","desc","RTCSessionDescription","setRemoteDescription","type","createAnswer","iceCandidate","ice_candidate","addIceCandidate","RTCIceCandidate","removeStream","closest","readyState","removeItem","includes","callback","require","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","element","id","appendTo","css","visibilityState","tab","canvasElement","processFrame","canvasCtx","faceMesh","FaceMesh","locateFile","file","setOptions","maxNumFaces","refineLandmarks","onResults","results","save","image","currentTime","console","log","multiFaceLandmarks","realtimeDetection","landmarks","leftEye","rightEye","nose","eyeMidpointX","x","noseX","currentDirection","clearTimeout","detectGazeDirection","leftEyeUpper","leftEyeLower","rightEyeUpper","rightEyeLower","leftEyeOpen","Math","abs","y","rightEyeOpen","EYE_OPEN_THRESHOLD","currentEyeStatus","detectEyeStatus","restore","send","setupFaceMesh","finally","dummyAudio","AudioContext","createMediaStreamDestination","dummyVideo","createElement","captureStream","dummyStream","createDummyMediaStream","URLSearchParams","search","get","hasOwnProperty","setupPeerConnection","face","validate"],"mappings":"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"}