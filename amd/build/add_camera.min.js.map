{"version":3,"file":"add_camera.min.js","sources":["../src/add_camera.js"],"sourcesContent":["/**\r\n * JavaScript class for Camera\r\n *\r\n * @subpackage quizproctoring\r\n * @copyright  2020 Mahendra Soni <ms@taketwotechnologies.com> {@link https://taketwotechnologies.com}\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\nwindow.addEventListener('beforeunload', function(event) {\r\n    event.stopImmediatePropagation();\r\n    event.returnValue = '';\r\n});\r\ndefine(['jquery', 'core/str', 'core/modal_factory'],\r\nfunction($, str, ModalFactory) {\r\n    $('.quizstartbuttondiv [type=submit]').prop(\"disabled\", true);\r\n    var Camera = function(cmid, mainimage = false, attemptid = null, quizid) {\r\n        var docElement = $(document);\r\n        this.video = document.getElementById(this.videoid);\r\n        this.canvas = document.getElementById(this.canvasid);\r\n        this.cmid = cmid;\r\n        this.quizid = quizid;\r\n        this.mainimage = mainimage;\r\n        this.attemptid = attemptid;\r\n        $(\"#id_submitbutton\").prop(\"disabled\", true);\r\n        docElement.on('popup', this.showpopup.bind(this));\r\n    };\r\n\r\n    /** @type Tag element contain video. */\r\n    Camera.prototype.video = false;\r\n    /** @type String video elemend id. */\r\n    Camera.prototype.videoid = 'video';\r\n    /** @type Tag element contain canvas. */\r\n    Camera.prototype.canvas = false;\r\n    /** @type String video elemend id. */\r\n    Camera.prototype.canvasid = 'canvas';\r\n    /** @type int width of canvas object. */\r\n    Camera.prototype.width = 320;\r\n    /** @type int width of canvas object. */\r\n    Camera.prototype.height = 240;\r\n    /** @type String element contain takepicture button. */\r\n    Camera.prototype.takepictureid = 'takepicture';\r\n    /** @type String element contain retake button. */\r\n    Camera.prototype.retakeid = 'retake';\r\n    /** @type int course module id. */\r\n    Camera.prototype.cmid = false;\r\n    /** @type bool whether a main image or compare against an image. */\r\n    Camera.prototype.mainimage = false;\r\n     /** @type int attempt id. */\r\n    Camera.prototype.attemptid = false;\r\n     /** @type int quiz id. */\r\n    Camera.prototype.quizid = false;\r\n\r\n    Camera.prototype.startcamera = function() {\r\n        return navigator.mediaDevices.getUserMedia({video: true, audio: true})\r\n            .then(function(stream) {\r\n                const videoElement = document.getElementById('video');\r\n                if (videoElement) {\r\n                    videoElement.srcObject = stream;\r\n                    videoElement.muted = true;\r\n                    videoElement.playsinline = true;\r\n                    localMediaStream = stream;\r\n                    videoElement.play();\r\n\r\n                    let offsetX;\r\n                    let offsetY;\r\n                    let isDragging = false;\r\n\r\n                    videoElement.addEventListener('mousedown', function(e) {\r\n                        isDragging = true;\r\n                        offsetX = e.clientX - videoElement.getBoundingClientRect().left;\r\n                        offsetY = e.clientY - videoElement.getBoundingClientRect().top;\r\n                        videoElement.style.zIndex = 9999999;\r\n                    });\r\n\r\n                    document.addEventListener('mousemove', function(e) {\r\n                        if (isDragging) {\r\n                            videoElement.style.left = `${e.clientX - offsetX}px`;\r\n                            videoElement.style.top = `${e.clientY - offsetY}px`;\r\n                        }\r\n                    });\r\n\r\n                    document.addEventListener('mouseup', function() {\r\n                        isDragging = false;\r\n                        videoElement.style.zIndex = 9999998;\r\n                    });\r\n                }\r\n                return videoElement;\r\n            })\r\n            .catch(function() {\r\n                // Console.log(err);\r\n            });\r\n    };\r\n\r\n    Camera.prototype.takepicture = function() {\r\n        var context = this.canvas.getContext('2d');\r\n        context.drawImage(this.video, 0, 0, this.width, this.height);\r\n        var data = this.canvas.toDataURL('image/png');\r\n        $('#' + this.videoid).hide();\r\n        $('#' + this.takepictureid).hide();\r\n        $('#' + this.canvasid).show();\r\n        $('#' + this.retakeid).show();\r\n        $(\"input[name='userimg']\").val(data);\r\n        $(\"#id_submitbutton\").prop(\"disabled\", true);\r\n        $.ajax({\r\n            url: M.cfg.wwwroot + '/mod/quiz/accessrule/quizproctoring/ajax.php',\r\n            method: 'POST',\r\n            data: {imgBase64: data, cmid: this.cmid, attemptid: this.attemptid, mainimage: this.mainimage},\r\n            success: function(response) {\r\n                if (response && response.errorcode) {\r\n                    $(\"input[name='userimg']\").val('');\r\n                    $(document).trigger('popup', response.error);\r\n                } else {\r\n                    $(\"#id_submitbutton\").prop(\"disabled\", false);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    Camera.prototype.proctoringimage = function() {\r\n        var requestData = {\r\n            cmid: this.cmid,\r\n            attemptid: this.attemptid,\r\n            mainimage: this.mainimage\r\n        };\r\n        if (this.canvas) {\r\n            var context = this.canvas.getContext('2d');\r\n            context.drawImage(this.video, 0, 0, this.width, this.height);\r\n            var data = this.canvas.toDataURL('image/png');\r\n            requestData.imgBase64 = data;\r\n        }\r\n        $.ajax({\r\n            url: M.cfg.wwwroot + '/mod/quiz/accessrule/quizproctoring/ajax.php',\r\n            method: 'POST',\r\n            data: requestData,\r\n            success: function(response) {\r\n                if (response && response.errorcode) {\r\n                    $(document).trigger('popup', response.error);\r\n                } else {\r\n                    if (response.redirect && response.url) {\r\n                        window.onbeforeunload = null;\r\n                        $(document).trigger('popup', response.msg);\r\n                        setTimeout(function() {\r\n                            window.location.href = encodeURI(response.url);\r\n                        }, 3000);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    Camera.prototype.resetcamera = function() {\r\n        var context = this.canvas.getContext('2d');\r\n        context.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n        $('#' + this.canvasid).hide();\r\n        $('#' + this.retakeid).hide();\r\n        $('#' + this.videoid).show();\r\n        $('#' + this.takepictureid).show();\r\n        $(\"input[name='userimg']\").val('');\r\n    };\r\n\r\n    var signalingSocket = null;\r\n    var externalserver = 'https://proctoring.taketwotechnologies.com';\r\n    var localMediaStream = null;\r\n    var peers = {};\r\n    var peerId = null;\r\n    var peerMediaElements = {};\r\n    var connectedPeers = {};\r\n    var USE_AUDIO = true;\r\n    var USE_VIDEO = true;\r\n    var MUTE_AUDIO_BY_DEFAULT = true;\r\n    var attachMediaStream = null;\r\n    var stream = null;\r\n\r\n    var ICE_SERVERS = [{urls: \"stun:stun.l.google.com:19302\"}];\r\n\r\n    Camera.prototype.retake = function() {\r\n        $(\"input[name='userimg']\").val('');\r\n        $('#' + this.videoid).show(this.cmid);\r\n        $('#' + this.takepictureid).show();\r\n        $('#' + this.canvasid).hide();\r\n        $('#' + this.retakeid).hide();\r\n        $(\"#id_submitbutton\").prop(\"disabled\", true);\r\n    };\r\n    Camera.prototype.showpopup = function(event, message) {\r\n        if (this.activeModal) {\r\n            this.activeModal.hide();\r\n            this.activeModal.destroy();\r\n        }\r\n        return ModalFactory.create({\r\n            body: message,\r\n        }).then((modal) => {\r\n            this.activeModal = modal;\r\n            modal.show();\r\n            return null;\r\n        });\r\n    };\r\n\r\n    Camera.prototype.stopcamera = function() {\r\n        if (localMediaStream) {\r\n            localMediaStream.getTracks().forEach(function(track) {\r\n                track.stop();\r\n            });\r\n            localMediaStream = null;\r\n        }\r\n    };\r\n\r\n    var init = function(cmid, mainimage, verifyduringattempt = true, attemptid = null,\r\n        teacher, quizid, serviceoption, userfullname = null, enablestudentvideo = 0, setinterval = 300) {\r\n        if (!verifyduringattempt) {\r\n            var camera;\r\n            if (document.readyState === 'complete') {\r\n                $('.quizstartbuttondiv [type=submit]').prop(\"disabled\", false);\r\n            } else {\r\n                $(window).on('load', function() {\r\n                    $('.quizstartbuttondiv [type=submit]').prop(\"disabled\", false);\r\n                });\r\n            }\r\n            camera = new Camera(cmid, mainimage, attemptid, quizid);\r\n            $('.quizstartbuttondiv [type=submit]').on('click', function() {\r\n                camera.startcamera();\r\n            });\r\n            // Take picture on button click\r\n            $('#' + camera.takepictureid).on('click', function(e) {\r\n                e.preventDefault();\r\n                camera.takepicture();\r\n            });\r\n            // Show video again when retake\r\n            $('#' + camera.retakeid).on('click', function(e) {\r\n                e.preventDefault();\r\n                camera.retake();\r\n            });\r\n            $('#id_cancel').on('click', function() {\r\n                camera.stopcamera();\r\n                camera.resetcamera();\r\n            });\r\n            $(document).on('click', '.closebutton', function() {\r\n                if (typeof camera !== 'undefined' && typeof camera.stopcamera === 'function') {\r\n                    camera.stopcamera();\r\n                    camera.resetcamera();\r\n                }\r\n            });\r\n        } else {\r\n            document.addEventListener('keydown', function(event) {\r\n                if ((event.ctrlKey || event.metaKey) && (event.key === 'c' || event.key === 'v')) {\r\n                    event.preventDefault();\r\n                }\r\n            });\r\n            signalingSocket = io(externalserver);\r\n            signalingSocket.on('connect', function() {\r\n            // Retrieve the session state from localStorage\r\n            var storedSession = localStorage.getItem('sessionState');\r\n            var sessionState = storedSession ? JSON.parse(storedSession) : null;\r\n            setupLocalMedia(cmid, mainimage, verifyduringattempt, attemptid,\r\n            teacher, enablestudentvideo, setinterval, serviceoption, quizid, function() {\r\n                // Once User gives access to mic/cam, join the channel and start peering up\r\n                var teacherroom = getTeacherroom();\r\n                var typet = {\"type\": (teacherroom === 'teacher') ? 'teacher' : 'student'};\r\n                var fullname = userfullname;\r\n\r\n                signalingSocket.emit('join', {\"room\": quizid, \"userdata\": {'quizid': quizid,\r\n                    'type': typet, 'fullname': fullname}});\r\n\r\n                // Restore the session state if available\r\n                if (sessionState) {\r\n                    restoreSessionState(sessionState);\r\n                }\r\n            });\r\n        });\r\n\r\n        signalingSocket.on('disconnect', function() {\r\n            /* Tear down all of our peer connections and remove all\r\n             * media divs when we disconnect */\r\n\r\n            for (peerId in peerMediaElements) {\r\n                peerMediaElements[peerId].remove();\r\n            }\r\n            for (peerId in peers) {\r\n                peers[peerId].close();\r\n            }\r\n\r\n            peers = {};\r\n            peerMediaElements = {};\r\n        });\r\n\r\n        signalingSocket.on('addPeer', function(config) {\r\n            var peerId = config.peer_id;\r\n\r\n            if (peerId in peers) {\r\n                return;\r\n            }\r\n\r\n            var peerConnection = new RTCPeerConnection(\r\n                {\"iceServers\": ICE_SERVERS},\r\n                {\"optional\": [{\"DtlsSrtpKeyAgreement\": true}]}\r\n            );\r\n            peers[peerId] = peerConnection;\r\n            // Add peer to the connectedPeers object\r\n            connectedPeers[peerId] = {\r\n                stream: new MediaStream()\r\n            };\r\n\r\n            peerConnection.onicecandidate = function(event) {\r\n                if (event.candidate) {\r\n                    signalingSocket.emit('relayICECandidate', {\r\n                        'peer_id': peerId,\r\n                        'ice_candidate': {\r\n                            'sdpMLineIndex': event.candidate.sdpMLineIndex,\r\n                            'candidate': event.candidate.candidate\r\n                        }\r\n                    });\r\n                }\r\n            };\r\n\r\n            peerConnection.ontrack = function(event) {\r\n\r\n                // Update connectedPeers stream\r\n                connectedPeers[peerId].stream.addTrack(event.track);\r\n                var remoteMedia;\r\n\r\n                if (peerMediaElements[peerId]) {\r\n                    remoteMedia = peerMediaElements[peerId];\r\n                } else {\r\n                    remoteMedia = USE_VIDEO ? $(\"<video>\") : $(\"<audio>\");\r\n                    remoteMedia.attr(\"autoplay\", \"autoplay\");\r\n                    remoteMedia.attr(\"muted\", \"true\");\r\n                    remoteMedia.attr(\"controls\", \"\");\r\n                    remoteMedia.attr(\"class\", \"quizaccess_quizproctoring\");\r\n\r\n                    if (MUTE_AUDIO_BY_DEFAULT) {\r\n                        remoteMedia.attr(\"muted\", \"true\");\r\n                    }\r\n                    remoteMedia.attr(\"controls\", \"\");\r\n                    if ($('#region-main-box .videos-container').length === 0) {\r\n                        $('#region-main-box').append($(\"<div>\").addClass(\"videos-container\"));\r\n                    }\r\n\r\n                    var studentContainer = $(\"<div>\").addClass(\"student-container\");\r\n                    var studentNameText = config.userdata && config.userdata.fullname ?\r\n                    config.userdata.fullname : \"Unknown Student\";\r\n                    var studentName = $(\"<span>\").addClass(\"student-name\").text(studentNameText);\r\n\r\n                    studentContainer.append(remoteMedia);\r\n                    studentContainer.append(studentName);\r\n\r\n                    peerMediaElements[peerId] = remoteMedia;\r\n                    var teacherroom = getTeacherroom();\r\n                    if (teacherroom === 'teacher') {\r\n                        $('.videos-container').append(studentContainer);\r\n                        attachMediaStream(remoteMedia[0], connectedPeers[peerId].stream);\r\n                    }\r\n                }\r\n            };\r\n            // Add our local stream\r\n            peerConnection.addStream(localMediaStream);\r\n\r\n            if (config.should_create_offer) {\r\n                peerConnection.createOffer(\r\n                    function(localDescription) {\r\n                        peerConnection.setLocalDescription(localDescription,\r\n                            function() {\r\n                                signalingSocket.emit('relaySessionDescription',\r\n                                    {'peer_id': peerId, 'session_description': localDescription});\r\n                            }\r\n                        );\r\n                    },\r\n                    function() {\r\n                        // Error handling will be implemented later\r\n                    }\r\n                );\r\n            }\r\n        });\r\n\r\n                /**\r\n                 * Peers exchange session descriptions which contains information\r\n                 * about their audio / video settings and that sort of stuff. First\r\n                 * the 'offerer' sends a description to the 'answerer' (with type\r\n                 * \"offer\"), then the answerer sends one back (with type \"answer\").\r\n                 */\r\n                signalingSocket.on('sessionDescription', function(config) {\r\n                    var peerId = config.peer_id;\r\n                    var peer = peers[peerId];\r\n                    var remoteDescription = config.session_description;\r\n                    var desc = new RTCSessionDescription(remoteDescription);\r\n                    peer.setRemoteDescription(desc)\r\n                    .then(function() {\r\n                        if (remoteDescription.type === \"offer\") {\r\n                            return peer.createAnswer();\r\n                        }\r\n                        return null;\r\n                    })\r\n                    .then(function(localDescription) {\r\n                        if (localDescription) {\r\n                            return peer.setLocalDescription(localDescription);\r\n                        }\r\n                        return null;\r\n                    })\r\n                    .then(function() {\r\n                        if (peer.localDescription) {\r\n                            signalingSocket.emit('relaySessionDescription', {\r\n                                'peer_id': peerId,\r\n                                'session_description': peer.localDescription\r\n                            });\r\n                        }\r\n                        return null;\r\n                    })\r\n                    .catch(function(error) {\r\n                        throw error;\r\n                    });\r\n                });\r\n\r\n                /**\r\n                 * The offerer will send a number of ICE Candidate blobs to the answerer so they\r\n                 * can begin trying to find the best path to one another on the net.\r\n                 */\r\n                signalingSocket.on('iceCandidate', function(config) {\r\n                    var peer = peers[config.peer_id];\r\n                    var iceCandidate = config.ice_candidate;\r\n                    peer.addIceCandidate(new RTCIceCandidate(iceCandidate));\r\n                });\r\n                /**\r\n                 * When a user leaves a channel (or is disconnected from the\r\n                 * signaling server) everyone will recieve a 'removePeer' message\r\n                 * telling them to trash the media channels they have open for those\r\n                 * that peer. If it was this client that left a channel, they'll also\r\n                 * receive the removePeers. If this client was disconnected, they\r\n                 * wont receive removePeers, but rather the\r\n                 * signalingSocket.on('disconnect') code will kick in and tear down\r\n                 * all the peer sessions.\r\n                 */\r\n                    signalingSocket.on('removePeer', function(config) {\r\n                    var peerId = config.peer_id;\r\n\r\n                    if (!(peerId in peers)) {\r\n                        return;\r\n                    }\r\n\r\n                    // Close the peer connection\r\n                    peers[peerId].removeStream(connectedPeers[peerId].stream);\r\n                    peers[peerId].close();\r\n\r\n                    // Remove the peer from connectedPeers\r\n                    delete connectedPeers[peerId];\r\n\r\n                    var remoteMedia = peerMediaElements[peerId];\r\n                    if (remoteMedia) {\r\n                        remoteMedia.closest('.student-container').remove();\r\n                    }\r\n                    // Remove references\r\n                    delete peers[peerId];\r\n                    delete peerMediaElements[peerId];\r\n                });\r\n    }\r\n\r\n    };\r\n    return {\r\n        init: init\r\n    };\r\n\r\n    /**\r\n     * Setup Local Media\r\n     *\r\n     * @param {int} cmid - cmid\r\n     * @param {boolean} mainimage - boolean value\r\n     * @param {boolean} verifyduringattempt - boolean value\r\n     * @param {int} attemptid - Attempt Id\r\n     * @param {boolean} teacher - boolean value\r\n     * @param {boolean} enablestudentvideo - boolean value\r\n     * @param {bigint} setinterval - int value\r\n     * @param {Longtext} serviceoption - string value\r\n     * @param {int} quizid - int value\r\n     * @param {function} callback - The callback function to execute after setting up the media stream.\r\n     * @return {void}\r\n     */\r\n    function setupLocalMedia(cmid, mainimage, verifyduringattempt, attemptid,\r\n        teacher, enablestudentvideo, setinterval, serviceoption, quizid, callback) {\r\n        require(['core/ajax'], function() {\r\n            if (localMediaStream !== null) {\r\n                if (callback) {\r\n                    callback();\r\n                }\r\n                return;\r\n            }\r\n\r\n            navigator.getUserMedia = (\r\n                navigator.getUserMedia ||\r\n                navigator.webkitGetUserMedia ||\r\n                navigator.mozGetUserMedia ||\r\n                navigator.msGetUserMedia\r\n            );\r\n\r\n            attachMediaStream = function(element, stream) {\r\n                element.srcObject = stream;\r\n            };\r\n\r\n            navigator.mediaDevices.getUserMedia({\"audio\": USE_AUDIO, \"video\": USE_VIDEO})\r\n                .then(function(stream) {\r\n                    localMediaStream = stream;\r\n                    if (verifyduringattempt) {\r\n                        var teacherroom = getTeacherroom();\r\n                        if (teacherroom !== 'teacher') {\r\n                            $('<canvas>').attr({id: 'canvas', width: '280',\r\n                                height: '240', 'style': 'display: none;'}).appendTo('body');\r\n                            $('<video>').attr({\r\n                                'id': 'video',\r\n                                'class': 'quizaccess_quizproctoring-video',\r\n                                'width': '280',\r\n                                'height': '240',\r\n                                'autoplay': 'autoplay'\r\n                            }).css('display', enablestudentvideo ? 'block' : 'none')\r\n                              .appendTo('body');\r\n                            document.addEventListener('visibilitychange', function() {\r\n                                if (document.visibilityState === 'visible') {\r\n                                   $.ajax({\r\n                                    url: M.cfg.wwwroot + '/mod/quiz/accessrule/quizproctoring/ajax.php',\r\n                                    method: 'POST',\r\n                                    data: {cmid: cmid, attemptid: attemptid, mainimage: mainimage, tab: true},\r\n                                        success: function(response) {\r\n                                            if (response && response.errorcode) {\r\n                                                $(document).trigger('popup', response.error);\r\n                                            } else {\r\n                                                if (response.redirect && response.url) {\r\n                                                    window.onbeforeunload = null;\r\n                                                    $(document).trigger('popup', response.msg);\r\n                                                    setTimeout(function() {\r\n                                                        window.location.href = encodeURI(response.url);\r\n                                                    }, 3000);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    });\r\n                                }\r\n                            });\r\n                            var camera = new Camera(cmid, mainimage, attemptid, quizid);\r\n                            camera.startcamera();\r\n                            setInterval(camera.proctoringimage.bind(camera), setinterval * 1000);\r\n                        }\r\n                    }\r\n                    return stream;\r\n                })\r\n                .catch(function() {\r\n                    // Handle the case where permission is denied\r\n                    if (verifyduringattempt) {\r\n                        var teacherroom = getTeacherroom();\r\n                        if (teacherroom !== 'teacher') {\r\n                            var camera = new Camera(cmid, mainimage, attemptid, quizid);\r\n                            camera.startcamera();\r\n                            setInterval(camera.proctoringimage.bind(camera), setinterval * 1000);\r\n                        }\r\n                    }\r\n                })\r\n                .finally(function() {\r\n                    if (callback) {\r\n                        callback();\r\n                    }\r\n                });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get Teacher room\r\n     *\r\n     * @return {string} teacher\r\n     */\r\n    function getTeacherroom() {\r\n        var urlParams = new URLSearchParams(window.location.search);\r\n        var teacher = urlParams.get('teacher');\r\n        return teacher;\r\n    }\r\n\r\n/**\r\n * RestoreSessionState\r\n *\r\n * @param {Longtext} sessionState sessionState\r\n */\r\nfunction restoreSessionState(sessionState) {\r\n    for (var peerId in sessionState.connectedPeers) {\r\n        if (sessionState.connectedPeers.hasOwnProperty(peerId)) {\r\n            var peer = sessionState.connectedPeers[peerId];\r\n\r\n            // Create RTCPeerConnection and add track\r\n            var peerConnection = new RTCPeerConnection(\r\n                {\"iceServers\": ICE_SERVERS},\r\n                {\"optional\": [{\"DtlsSrtpKeyAgreement\": true}]}\r\n            );\r\n\r\n            peers[peerId] = peerConnection;\r\n\r\n            setupPeerConnection(peerConnection, peerId, peer);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * SetupPeerConnection\r\n *\r\n * @param {Longtext} peerConnection peerConnection\r\n * @param {Longtext} peerId peerId\r\n * @param {Longtext} peer peer\r\n */\r\nfunction setupPeerConnection(peerConnection, peerId, peer) {\r\n    peerConnection.onicecandidate = function(event) {\r\n        if (event.candidate) {\r\n            signalingSocket.emit('relayICECandidate', {\r\n                'peer_id': peerId,\r\n                'ice_candidate': {\r\n                    'sdpMLineIndex': event.candidate.sdpMLineIndex,\r\n                    'candidate': event.candidate.candidate\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    peerConnection.ontrack = function(event) {\r\n        // Update connectedPeers stream\r\n        peer.stream.addTrack(event.track);\r\n\r\n        var remoteMedia;\r\n\r\n        if (peerMediaElements[peerId]) {\r\n            remoteMedia = peerMediaElements[peerId];\r\n        } else {\r\n            remoteMedia = USE_VIDEO ? $(\"<video>\") : $(\"<audio>\");\r\n            remoteMedia.attr(\"autoplay\", \"autoplay\");\r\n\r\n            if (MUTE_AUDIO_BY_DEFAULT) {\r\n                remoteMedia.attr(\"muted\", \"true\");\r\n            }\r\n            remoteMedia.attr(\"controls\", \"\");\r\n            peerMediaElements[peerId] = remoteMedia;\r\n            var teacherroom = getTeacherroom();\r\n            if (teacherroom === 'teacher') {\r\n                $('#region-main-box').append(remoteMedia);\r\n                attachMediaStream(remoteMedia[0], stream);\r\n            }\r\n        }\r\n        attachMediaStream(remoteMedia[0], peer.stream);\r\n    };\r\n\r\n    // Add our local stream\r\n    peerConnection.addStream(localMediaStream);\r\n\r\n    // Add existing tracks to the new connection\r\n    for (var track of peer.stream.getTracks()) {\r\n        peerConnection.addTrack(track, peer.stream);\r\n    }\r\n\r\n    // Create an offer\r\n    peerConnection.createOffer(\r\n        function(localDescription) {\r\n            peerConnection.setLocalDescription(localDescription,\r\n                function() {\r\n                    signalingSocket.emit('relaySessionDescription', {\r\n                        'peer_id': peerId,\r\n                        'session_description': localDescription\r\n                    });\r\n                }\r\n            );\r\n        });\r\n}\r\n});\r\n"],"names":["window","addEventListener","event","stopImmediatePropagation","returnValue","define","$","str","ModalFactory","prop","Camera","cmid","mainimage","attemptid","quizid","docElement","document","video","getElementById","this","videoid","canvas","canvasid","on","showpopup","bind","prototype","width","height","takepictureid","retakeid","startcamera","navigator","mediaDevices","getUserMedia","audio","then","stream","videoElement","offsetX","offsetY","srcObject","muted","playsinline","localMediaStream","play","isDragging","e","clientX","getBoundingClientRect","left","clientY","top","style","zIndex","catch","takepicture","getContext","drawImage","data","toDataURL","hide","show","val","ajax","url","M","cfg","wwwroot","method","imgBase64","success","response","errorcode","trigger","error","proctoringimage","requestData","redirect","onbeforeunload","msg","setTimeout","location","href","encodeURI","resetcamera","clearRect","signalingSocket","peers","peerId","peerMediaElements","connectedPeers","attachMediaStream","ICE_SERVERS","urls","retake","message","activeModal","destroy","create","body","modal","stopcamera","getTracks","forEach","track","stop","init","verifyduringattempt","teacher","serviceoption","userfullname","enablestudentvideo","setinterval","camera","ctrlKey","metaKey","key","preventDefault","io","storedSession","localStorage","getItem","sessionState","JSON","parse","setupLocalMedia","typet","getTeacherroom","fullname","emit","restoreSessionState","remove","close","config","peer_id","peerConnection","RTCPeerConnection","MediaStream","onicecandidate","candidate","sdpMLineIndex","ontrack","remoteMedia","addTrack","attr","length","append","addClass","studentContainer","studentNameText","userdata","studentName","text","addStream","should_create_offer","createOffer","localDescription","setLocalDescription","peer","remoteDescription","session_description","desc","RTCSessionDescription","setRemoteDescription","type","createAnswer","iceCandidate","ice_candidate","addIceCandidate","RTCIceCandidate","removeStream","closest","readyState","callback","require","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","element","id","appendTo","css","visibilityState","tab","setInterval","finally","URLSearchParams","search","get","hasOwnProperty","setupPeerConnection"],"mappings":"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"}