{"version":3,"file":"add_camera.min.js","sources":["../src/add_camera.js"],"sourcesContent":["/**\r\n * JavaScript class for Camera\r\n *\r\n * @subpackage quizproctoring\r\n * @copyright  2020 Mahendra Soni <ms@taketwotechnologies.com> {@link https://taketwotechnologies.com}\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\nwindow.addEventListener('beforeunload', function(event) {\r\n    event.stopImmediatePropagation();\r\n    event.returnValue = '';\r\n});\r\ndefine(['jquery', 'core/str', 'core/modal_factory'],\r\nfunction($, str, ModalFactory) {\r\n    $('.quizstartbuttondiv [type=submit]').prop(\"disabled\", true);\r\n    var Camera = function(cmid, mainimage = false, attemptid = null, quizid) {\r\n        var docElement = $(document);\r\n        this.video = document.getElementById(this.videoid);\r\n        this.canvas = document.getElementById(this.canvasid);\r\n        this.cmid = cmid;\r\n        this.quizid = quizid;\r\n        this.mainimage = mainimage;\r\n        this.attemptid = attemptid;\r\n        $(\"#id_submitbutton\").prop(\"disabled\", true);\r\n        docElement.on('popup', this.showpopup.bind(this));\r\n    };\r\n\r\n    /** @type Tag element contain video. */\r\n    Camera.prototype.video = false;\r\n    /** @type String video elemend id. */\r\n    Camera.prototype.videoid = 'video';\r\n    /** @type Tag element contain canvas. */\r\n    Camera.prototype.canvas = false;\r\n    /** @type String video elemend id. */\r\n    Camera.prototype.canvasid = 'canvas';\r\n    /** @type int width of canvas object. */\r\n    Camera.prototype.width = 320;\r\n    /** @type int width of canvas object. */\r\n    Camera.prototype.height = 240;\r\n    /** @type String element contain takepicture button. */\r\n    Camera.prototype.takepictureid = 'takepicture';\r\n    /** @type String element contain retake button. */\r\n    Camera.prototype.retakeid = 'retake';\r\n    /** @type int course module id. */\r\n    Camera.prototype.cmid = false;\r\n    /** @type bool whether a main image or compare against an image. */\r\n    Camera.prototype.mainimage = false;\r\n     /** @type int attempt id. */\r\n    Camera.prototype.attemptid = false;\r\n     /** @type int quiz id. */\r\n    Camera.prototype.quizid = false;\r\n\r\n    Camera.prototype.startcamera = function() {\r\n        const takePictureButton = $('#' + this.takepictureid);\r\n        takePictureButton.prop('disabled', true);\r\n        return navigator.mediaDevices.getUserMedia({video: true, audio: true})\r\n            .then(function(stream) {\r\n                const videoElement = document.getElementById('video');\r\n                if (videoElement) {\r\n                    videoElement.srcObject = stream;\r\n                    videoElement.muted = true;\r\n                    videoElement.playsinline = true;\r\n                    localMediaStream = stream;\r\n                    videoElement.play();\r\n\r\n                    videoElement.addEventListener('contextmenu', function(e) {\r\n                        e.preventDefault();\r\n                    });\r\n\r\n                    stream.getVideoTracks()[0].onended = function() {\r\n                        takePictureButton.prop('disabled', true);\r\n                        $(document).trigger('popup', 'Camera or microphone is disabled. Please enable both to continue.');\r\n                    };\r\n\r\n                    const audioTrack = stream.getAudioTracks()[0];\r\n                    if (audioTrack) {\r\n                        audioTrack.onended = function() {\r\n                            $(document).trigger('popup', 'Camera or microphone is disabled. Please enable both to continue.');\r\n                        };\r\n                    } else {\r\n                        $(document).trigger('popup', 'Camera or microphone is disabled. Please enable both to continue.');\r\n                    }\r\n\r\n                    const savedPosition = JSON.parse(localStorage.getItem('videoPosition'));\r\n                    if (savedPosition) {\r\n                        videoElement.style.left = savedPosition.left;\r\n                        videoElement.style.top = savedPosition.top;\r\n                    }\r\n\r\n                    let offsetX;\r\n                    let offsetY;\r\n                    let isDragging = false;\r\n\r\n                    videoElement.addEventListener('mousedown', function(e) {\r\n                        isDragging = true;\r\n                        offsetX = e.clientX - videoElement.getBoundingClientRect().left;\r\n                        offsetY = e.clientY - videoElement.getBoundingClientRect().top;\r\n                        videoElement.style.zIndex = 9999999;\r\n                    });\r\n\r\n                    document.addEventListener('mousemove', function(e) {\r\n                        if (isDragging) {\r\n                            videoElement.style.left = `${e.clientX - offsetX}px`;\r\n                            videoElement.style.top = `${e.clientY - offsetY}px`;\r\n                        }\r\n                    });\r\n\r\n                    document.addEventListener('mouseup', function() {\r\n                        isDragging = false;\r\n                        videoElement.style.zIndex = 9999998;\r\n\r\n                        const position = {\r\n                            left: videoElement.style.left,\r\n                            top: videoElement.style.top\r\n                        };\r\n                        localStorage.setItem('videoPosition', JSON.stringify(position));\r\n                    });\r\n                    takePictureButton.prop('disabled', false);\r\n                }\r\n                return videoElement;\r\n            })\r\n            .catch(function() {\r\n                takePictureButton.prop('disabled', true);\r\n            });\r\n    };\r\n\r\n    Camera.prototype.takepicture = function() {\r\n        var context = this.canvas.getContext('2d');\r\n        context.drawImage(this.video, 0, 0, this.width, this.height);\r\n        var data = this.canvas.toDataURL('image/png');\r\n        $('#' + this.videoid).hide();\r\n        $('#' + this.takepictureid).hide();\r\n        $('#' + this.canvasid).show();\r\n        $('#' + this.retakeid).show();\r\n        $(\"input[name='userimg']\").val(data);\r\n        $(\"#id_submitbutton\").prop(\"disabled\", true);\r\n        $.ajax({\r\n            url: M.cfg.wwwroot + '/mod/quiz/accessrule/quizproctoring/ajax.php',\r\n            method: 'POST',\r\n            data: {imgBase64: data, cmid: this.cmid, attemptid: this.attemptid, mainimage: this.mainimage},\r\n            success: function(response) {\r\n                if (response && response.errorcode) {\r\n                    $(\"input[name='userimg']\").val('');\r\n                    $(document).trigger('popup', response.error);\r\n                } else {\r\n                    $(\"#id_submitbutton\").prop(\"disabled\", false);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    Camera.prototype.proctoringimage = function() {\r\n        var requestData = {\r\n            cmid: this.cmid,\r\n            attemptid: this.attemptid,\r\n            mainimage: this.mainimage\r\n        };\r\n        if (this.canvas) {\r\n            var context = this.canvas.getContext('2d');\r\n            context.drawImage(this.video, 0, 0, this.width, this.height);\r\n            var data = this.canvas.toDataURL('image/png');\r\n            requestData.imgBase64 = data;\r\n        }\r\n        $.ajax({\r\n            url: M.cfg.wwwroot + '/mod/quiz/accessrule/quizproctoring/ajax.php',\r\n            method: 'POST',\r\n            data: requestData,\r\n            success: function(response) {\r\n                if (response && response.errorcode) {\r\n                    $(document).trigger('popup', response.error);\r\n                } else {\r\n                    if (response.redirect && response.url) {\r\n                        window.onbeforeunload = null;\r\n                        $(document).trigger('popup', response.msg);\r\n                        setTimeout(function() {\r\n                            window.location.href = encodeURI(response.url);\r\n                        }, 3000);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    Camera.prototype.resetcamera = function() {\r\n        var context = this.canvas.getContext('2d');\r\n        context.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n        $('#' + this.canvasid).hide();\r\n        $('#' + this.retakeid).hide();\r\n        $('#' + this.videoid).show();\r\n        $('#' + this.takepictureid).show();\r\n        $(\"input[name='userimg']\").val('');\r\n    };\r\n\r\n    var signalingSocket = null;\r\n    var externalserver = 'https://proctoring.taketwotechnologies.com';\r\n    var localMediaStream = null;\r\n    var peers = {};\r\n    var peerId = null;\r\n    var peerMediaElements = {};\r\n    var connectedPeers = {};\r\n    var USE_AUDIO = true;\r\n    var USE_VIDEO = true;\r\n    var MUTE_AUDIO_BY_DEFAULT = true;\r\n    var attachMediaStream = null;\r\n    var stream = null;\r\n    let gazeDirection = null;\r\n    let gazeTimer = null;\r\n    const GAZE_THRESHOLD = 2000;\r\n    let eyeStatus = \"Open\";\r\n    let eyeTimer = null;\r\n    const EYE_THRESHOLD = 3000;\r\n\r\n    var ICE_SERVERS = [{urls: \"stun:stun.l.google.com:19302\"}];\r\n\r\n    Camera.prototype.retake = function() {\r\n        $(\"input[name='userimg']\").val('');\r\n        $('#' + this.videoid).show(this.cmid);\r\n        $('#' + this.takepictureid).show();\r\n        $('#' + this.canvasid).hide();\r\n        $('#' + this.retakeid).hide();\r\n        $(\"#id_submitbutton\").prop(\"disabled\", true);\r\n    };\r\n    Camera.prototype.showpopup = function(event, message) {\r\n        if (this.activeModal) {\r\n            this.activeModal.hide();\r\n            this.activeModal.destroy();\r\n        }\r\n        return ModalFactory.create({\r\n            body: message,\r\n        }).then((modal) => {\r\n            this.activeModal = modal;\r\n            modal.show();\r\n            return null;\r\n        });\r\n    };\r\n\r\n    Camera.prototype.stopcamera = function() {\r\n        if (localMediaStream) {\r\n            localMediaStream.getTracks().forEach(function(track) {\r\n                track.stop();\r\n            });\r\n            localMediaStream = null;\r\n        }\r\n    };\r\n\r\n    var init = function(cmid, mainimage, verifyduringattempt = true, attemptid = null,\r\n        teacher, quizid, serviceoption, securewindow = null, userfullname = null, enablestudentvideo = 0, setinterval = 300) {\r\n        if (!verifyduringattempt) {\r\n            var camera;\r\n            if (document.readyState === 'complete') {\r\n                $('.quizstartbuttondiv [type=submit]').prop(\"disabled\", false);\r\n            } else {\r\n                $(window).on('load', function() {\r\n                    $('.quizstartbuttondiv [type=submit]').prop(\"disabled\", false);\r\n                });\r\n            }\r\n            camera = new Camera(cmid, mainimage, attemptid, quizid);\r\n            $('.quizstartbuttondiv [type=submit]').on('click', function() {\r\n                localStorage.removeItem('videoPosition');\r\n                camera.startcamera();\r\n            });\r\n            // Take picture on button click\r\n            $('#' + camera.takepictureid).on('click', function(e) {\r\n                e.preventDefault();\r\n                camera.takepicture();\r\n            });\r\n            // Show video again when retake\r\n            $('#' + camera.retakeid).on('click', function(e) {\r\n                e.preventDefault();\r\n                camera.retake();\r\n            });\r\n            $('#id_cancel').on('click', function() {\r\n                camera.stopcamera();\r\n                camera.resetcamera();\r\n                $(\"#id_submitbutton\").prop(\"disabled\", true);\r\n                localStorage.removeItem('videoPosition');\r\n            });\r\n            $(document).on('click', '.closebutton', function() {\r\n                if (typeof camera !== 'undefined' && typeof camera.stopcamera === 'function') {\r\n                    camera.stopcamera();\r\n                    camera.resetcamera();\r\n                    $(\"#id_submitbutton\").prop(\"disabled\", true);\r\n                    localStorage.removeItem('videoPosition');\r\n                }\r\n            });\r\n            document.addEventListener('keydown', function(event) {\r\n                if (event.key === 'Escape') {\r\n                    camera.stopcamera();\r\n                    camera.resetcamera();\r\n                    $(\"#id_submitbutton\").prop(\"disabled\", true);\r\n                    localStorage.removeItem('videoPosition');\r\n                }\r\n            });\r\n        } else {\r\n            document.addEventListener('keydown', function(event) {\r\n                if ((event.ctrlKey || event.metaKey) && (event.key === 'c' || event.key === 'v')) {\r\n                    event.preventDefault();\r\n                }\r\n            });\r\n            document.addEventListener('dragstart', function(event) {\r\n                event.preventDefault();\r\n            });\r\n\r\n            document.addEventListener('drop', function(event) {\r\n                event.preventDefault();\r\n            });\r\n            signalingSocket = io(externalserver);\r\n            signalingSocket.on('connect', function() {\r\n            // Retrieve the session state from localStorage\r\n            var storedSession = localStorage.getItem('sessionState');\r\n            var sessionState = storedSession ? JSON.parse(storedSession) : null;\r\n            setupLocalMedia(cmid, mainimage, verifyduringattempt, attemptid,\r\n            teacher, enablestudentvideo, setinterval, serviceoption, quizid, function() {\r\n                // Once User gives access to mic/cam, join the channel and start peering up\r\n                var teacherroom = getTeacherroom();\r\n                var typet = {\"type\": (teacherroom === 'teacher') ? 'teacher' : 'student'};\r\n                var fullname = userfullname;\r\n\r\n                signalingSocket.emit('join', {\"room\": quizid, \"userdata\": {'quizid': quizid,\r\n                    'type': typet, 'fullname': fullname}});\r\n\r\n                // Restore the session state if available\r\n                if (sessionState) {\r\n                    restoreSessionState(sessionState);\r\n                }\r\n            });\r\n        });\r\n\r\n        signalingSocket.on('disconnect', function() {\r\n            /* Tear down all of our peer connections and remove all\r\n             * media divs when we disconnect */\r\n\r\n            for (peerId in peerMediaElements) {\r\n                peerMediaElements[peerId].remove();\r\n            }\r\n            for (peerId in peers) {\r\n                peers[peerId].close();\r\n            }\r\n\r\n            peers = {};\r\n            peerMediaElements = {};\r\n        });\r\n\r\n        signalingSocket.on('addPeer', function(config) {\r\n            var peerId = config.peer_id;\r\n\r\n            if (peerId in peers) {\r\n                return;\r\n            }\r\n\r\n            var peerConnection = new RTCPeerConnection(\r\n                {\"iceServers\": ICE_SERVERS},\r\n                {\"optional\": [{\"DtlsSrtpKeyAgreement\": true}]}\r\n            );\r\n            peers[peerId] = peerConnection;\r\n            // Add peer to the connectedPeers object\r\n            connectedPeers[peerId] = {\r\n                stream: new MediaStream()\r\n            };\r\n\r\n            peerConnection.onicecandidate = function(event) {\r\n                if (event.candidate) {\r\n                    signalingSocket.emit('relayICECandidate', {\r\n                        'peer_id': peerId,\r\n                        'ice_candidate': {\r\n                            'sdpMLineIndex': event.candidate.sdpMLineIndex,\r\n                            'candidate': event.candidate.candidate\r\n                        }\r\n                    });\r\n                }\r\n            };\r\n\r\n            peerConnection.ontrack = function(event) {\r\n\r\n                // Update connectedPeers stream\r\n                connectedPeers[peerId].stream.addTrack(event.track);\r\n                var remoteMedia;\r\n\r\n                if (peerMediaElements[peerId]) {\r\n                    remoteMedia = peerMediaElements[peerId];\r\n                } else {\r\n                    remoteMedia = USE_VIDEO ? $(\"<video>\") : $(\"<audio>\");\r\n                    remoteMedia.attr(\"autoplay\", \"autoplay\");\r\n                    remoteMedia.attr(\"muted\", \"true\");\r\n                    remoteMedia.attr(\"controls\", \"\");\r\n                    remoteMedia.attr(\"class\", \"quizaccess_quizproctoring\");\r\n\r\n                    if (MUTE_AUDIO_BY_DEFAULT) {\r\n                        remoteMedia.attr(\"muted\", \"true\");\r\n                    }\r\n                    remoteMedia.attr(\"controls\", \"\");\r\n                    if ($('#region-main-box .videos-container').length === 0) {\r\n                        $('#region-main-box').append($(\"<div>\").addClass(\"videos-container\"));\r\n                    }\r\n\r\n                    var studentContainer = $(\"<div>\").addClass(\"student-container\");\r\n                    var studentNameText = config.fullname ? config.fullname : \"Unknown Student\";\r\n                    var studentName = $(\"<span>\").addClass(\"student-name\").text(studentNameText);\r\n\r\n                    studentContainer.append(remoteMedia);\r\n                    //studentContainer.append(studentName);\r\n\r\n                    peerMediaElements[peerId] = remoteMedia;\r\n                    var teacherroom = getTeacherroom();\r\n                    if (teacherroom === 'teacher') {\r\n                        $('.videos-container').append(studentContainer);\r\n                        attachMediaStream(remoteMedia[0], connectedPeers[peerId].stream);\r\n                    }\r\n                }\r\n            };\r\n            // Add our local stream\r\n            peerConnection.addStream(localMediaStream);\r\n\r\n            if (config.should_create_offer) {\r\n                peerConnection.createOffer(\r\n                    function(localDescription) {\r\n                        peerConnection.setLocalDescription(localDescription,\r\n                            function() {\r\n                                signalingSocket.emit('relaySessionDescription',\r\n                                    {'peer_id': peerId, 'session_description': localDescription});\r\n                            }\r\n                        );\r\n                    },\r\n                    function() {\r\n                        // Error handling will be implemented later\r\n                    }\r\n                );\r\n            }\r\n        });\r\n\r\n                /**\r\n                 * Peers exchange session descriptions which contains information\r\n                 * about their audio / video settings and that sort of stuff. First\r\n                 * the 'offerer' sends a description to the 'answerer' (with type\r\n                 * \"offer\"), then the answerer sends one back (with type \"answer\").\r\n                 */\r\n                signalingSocket.on('sessionDescription', function(config) {\r\n                    var peerId = config.peer_id;\r\n                    var peer = peers[peerId];\r\n                    var remoteDescription = config.session_description;\r\n                    var desc = new RTCSessionDescription(remoteDescription);\r\n                    peer.setRemoteDescription(desc)\r\n                    .then(function() {\r\n                        if (remoteDescription.type === \"offer\") {\r\n                            return peer.createAnswer();\r\n                        }\r\n                        return null;\r\n                    })\r\n                    .then(function(localDescription) {\r\n                        if (localDescription) {\r\n                            return peer.setLocalDescription(localDescription);\r\n                        }\r\n                        return null;\r\n                    })\r\n                    .then(function() {\r\n                        if (peer.localDescription) {\r\n                            signalingSocket.emit('relaySessionDescription', {\r\n                                'peer_id': peerId,\r\n                                'session_description': peer.localDescription\r\n                            });\r\n                        }\r\n                        return null;\r\n                    })\r\n                    .catch(function(error) {\r\n                        throw error;\r\n                    });\r\n                });\r\n\r\n                /**\r\n                 * The offerer will send a number of ICE Candidate blobs to the answerer so they\r\n                 * can begin trying to find the best path to one another on the net.\r\n                 */\r\n                signalingSocket.on('iceCandidate', function(config) {\r\n                    var peer = peers[config.peer_id];\r\n                    var iceCandidate = config.ice_candidate;\r\n                    peer.addIceCandidate(new RTCIceCandidate(iceCandidate));\r\n                });\r\n                /**\r\n                 * When a user leaves a channel (or is disconnected from the\r\n                 * signaling server) everyone will recieve a 'removePeer' message\r\n                 * telling them to trash the media channels they have open for those\r\n                 * that peer. If it was this client that left a channel, they'll also\r\n                 * receive the removePeers. If this client was disconnected, they\r\n                 * wont receive removePeers, but rather the\r\n                 * signalingSocket.on('disconnect') code will kick in and tear down\r\n                 * all the peer sessions.\r\n                 */\r\n                    signalingSocket.on('removePeer', function(config) {\r\n                    var peerId = config.peer_id;\r\n\r\n                    if (!(peerId in peers)) {\r\n                        return;\r\n                    }\r\n\r\n                    // Close the peer connection\r\n                    peers[peerId].removeStream(connectedPeers[peerId].stream);\r\n                    peers[peerId].close();\r\n\r\n                    // Remove the peer from connectedPeers\r\n                    delete connectedPeers[peerId];\r\n\r\n                    var remoteMedia = peerMediaElements[peerId];\r\n                    if (remoteMedia) {\r\n                        remoteMedia.closest('.student-container').remove();\r\n                    }\r\n                    // Remove references\r\n                    delete peers[peerId];\r\n                    delete peerMediaElements[peerId];\r\n                });\r\n    }\r\n\r\n    };\r\n    return {\r\n        init: init\r\n    };\r\n\r\n    /**\r\n     * Setup Local Media\r\n     *\r\n     * @param {int} cmid - cmid\r\n     * @param {boolean} mainimage - boolean value\r\n     * @param {boolean} verifyduringattempt - boolean value\r\n     * @param {int} attemptid - Attempt Id\r\n     * @param {boolean} teacher - boolean value\r\n     * @param {boolean} enablestudentvideo - boolean value\r\n     * @param {bigint} setinterval - int value\r\n     * @param {Longtext} serviceoption - string value\r\n     * @param {int} quizid - int value\r\n     * @param {function} callback - The callback function to execute after setting up the media stream.\r\n     * @return {void}\r\n     */\r\n    function setupLocalMedia(cmid, mainimage, verifyduringattempt, attemptid,\r\n        teacher, enablestudentvideo, setinterval, serviceoption, quizid, callback) {\r\n        require(['core/ajax'], function() {\r\n            if (localMediaStream !== null) {\r\n                if (callback) {\r\n                    callback();\r\n                }\r\n                return;\r\n            }\r\n\r\n            navigator.getUserMedia = (\r\n                navigator.getUserMedia ||\r\n                navigator.webkitGetUserMedia ||\r\n                navigator.mozGetUserMedia ||\r\n                navigator.msGetUserMedia\r\n            );\r\n\r\n            attachMediaStream = function(element, stream) {\r\n                element.srcObject = stream;\r\n            };\r\n\r\n            navigator.mediaDevices.getUserMedia({\"audio\": USE_AUDIO, \"video\": USE_VIDEO})\r\n                .then(function(stream) {\r\n                    localMediaStream = stream;\r\n                    if (verifyduringattempt) {\r\n                        var teacherroom = getTeacherroom();\r\n                        if (teacherroom !== 'teacher') {\r\n                            $('<canvas>').attr({id: 'canvas', width: '280',\r\n                                height: '240', 'style': 'display: none;'}).appendTo('body');\r\n                            $('<video>').attr({\r\n                                'id': 'video',\r\n                                'class': 'quizaccess_quizproctoring-video',\r\n                                'width': '280',\r\n                                'height': '240',\r\n                                'autoplay': 'autoplay'\r\n                            }).css('display', enablestudentvideo ? 'block' : 'none')\r\n                              .appendTo('body');\r\n                            document.addEventListener('visibilitychange', function() {\r\n                                if (document.visibilityState === 'visible') {\r\n                                   $.ajax({\r\n                                    url: M.cfg.wwwroot + '/mod/quiz/accessrule/quizproctoring/ajax.php',\r\n                                    method: 'POST',\r\n                                    data: {cmid: cmid, attemptid: attemptid, mainimage: mainimage, tab: true},\r\n                                        success: function(response) {\r\n                                            if (response && response.errorcode) {\r\n                                                $(document).trigger('popup', response.error);\r\n                                            } else {\r\n                                                if (response.redirect && response.url) {\r\n                                                    window.onbeforeunload = null;\r\n                                                    $(document).trigger('popup', response.msg);\r\n                                                    setTimeout(function() {\r\n                                                        window.location.href = encodeURI(response.url);\r\n                                                    }, 3000);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    });\r\n                                }\r\n                            });\r\n                            var camera = new Camera(cmid, mainimage, attemptid, quizid);\r\n                            camera.startcamera();\r\n                            setInterval(camera.proctoringimage.bind(camera), setinterval * 1000);\r\n\r\n                            const videoElement = document.getElementById('video');\r\n                            const canvasElement = document.getElementById('canvas');\r\n                            function processFrame() {\r\n                                if (videoElement.readyState < 2) {\r\n                                    console.warn(\"Video not ready for processing.\");\r\n                                    setTimeout(processFrame, 2000); // Retry after 2 seconds\r\n                                    return;\r\n                                }\r\n\r\n                                setupFaceMesh(videoElement, canvasElement, cmid, attemptid, mainimage);\r\n                                setTimeout(processFrame, 2000);\r\n                            }\r\n                            if (videoElement && canvasElement) {\r\n                                videoElement.addEventListener('loadeddata', () => {\r\n                                    console.log(\"Video is ready.\");\r\n                                    videoElement.play();\r\n                                    processFrame();\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                    return stream;\r\n                })\r\n                .catch(function() {\r\n                    // Handle the case where permission is denied\r\n                    if (verifyduringattempt) {\r\n                        var teacherroom = getTeacherroom();\r\n                        if (teacherroom !== 'teacher') {\r\n                            var camera = new Camera(cmid, mainimage, attemptid, quizid);\r\n                            camera.startcamera();\r\n                            setInterval(camera.proctoringimage.bind(camera), setinterval * 1000);\r\n                        }\r\n                    }\r\n                })\r\n                .finally(function() {\r\n                    if (callback) {\r\n                        callback();\r\n                    }\r\n                });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get Teacher room\r\n     *\r\n     * @return {string} teacher\r\n     */\r\n    function getTeacherroom() {\r\n        var urlParams = new URLSearchParams(window.location.search);\r\n        var teacher = urlParams.get('teacher');\r\n        return teacher;\r\n    }\r\n\r\n/**\r\n * RestoreSessionState\r\n *\r\n * @param {Longtext} sessionState sessionState\r\n */\r\nfunction restoreSessionState(sessionState) {\r\n    for (var peerId in sessionState.connectedPeers) {\r\n        if (sessionState.connectedPeers.hasOwnProperty(peerId)) {\r\n            var peer = sessionState.connectedPeers[peerId];\r\n\r\n            // Create RTCPeerConnection and add track\r\n            var peerConnection = new RTCPeerConnection(\r\n                {\"iceServers\": ICE_SERVERS},\r\n                {\"optional\": [{\"DtlsSrtpKeyAgreement\": true}]}\r\n            );\r\n\r\n            peers[peerId] = peerConnection;\r\n\r\n            setupPeerConnection(peerConnection, peerId, peer);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * SetupPeerConnection\r\n *\r\n * @param {Longtext} peerConnection peerConnection\r\n * @param {Longtext} peerId peerId\r\n * @param {Longtext} peer peer\r\n */\r\nfunction setupPeerConnection(peerConnection, peerId, peer) {\r\n    peerConnection.onicecandidate = function(event) {\r\n        if (event.candidate) {\r\n            signalingSocket.emit('relayICECandidate', {\r\n                'peer_id': peerId,\r\n                'ice_candidate': {\r\n                    'sdpMLineIndex': event.candidate.sdpMLineIndex,\r\n                    'candidate': event.candidate.candidate\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    peerConnection.ontrack = function(event) {\r\n        // Update connectedPeers stream\r\n        peer.stream.addTrack(event.track);\r\n\r\n        var remoteMedia;\r\n\r\n        if (peerMediaElements[peerId]) {\r\n            remoteMedia = peerMediaElements[peerId];\r\n        } else {\r\n            remoteMedia = USE_VIDEO ? $(\"<video>\") : $(\"<audio>\");\r\n            remoteMedia.attr(\"autoplay\", \"autoplay\");\r\n\r\n            if (MUTE_AUDIO_BY_DEFAULT) {\r\n                remoteMedia.attr(\"muted\", \"true\");\r\n            }\r\n            remoteMedia.attr(\"controls\", \"\");\r\n            peerMediaElements[peerId] = remoteMedia;\r\n            var teacherroom = getTeacherroom();\r\n            if (teacherroom === 'teacher') {\r\n                $('#region-main-box').append(remoteMedia);\r\n                attachMediaStream(remoteMedia[0], stream);\r\n            }\r\n        }\r\n        attachMediaStream(remoteMedia[0], peer.stream);\r\n    };\r\n\r\n    // Add our local stream\r\n    peerConnection.addStream(localMediaStream);\r\n\r\n    // Add existing tracks to the new connection\r\n    for (var track of peer.stream.getTracks()) {\r\n        peerConnection.addTrack(track, peer.stream);\r\n    }\r\n\r\n    // Create an offer\r\n    peerConnection.createOffer(\r\n        function(localDescription) {\r\n            peerConnection.setLocalDescription(localDescription,\r\n                function() {\r\n                    signalingSocket.emit('relaySessionDescription', {\r\n                        'peer_id': peerId,\r\n                        'session_description': localDescription\r\n                    });\r\n                }\r\n            );\r\n        });\r\n}\r\n\r\n/**\r\n * SetupFaceMesh\r\n *\r\n * @param {Longtext} videoElement videoElement\r\n * @param {Longtext} canvasElement canvasElement\r\n * @param {int} cmid - cmid\r\n * @param {int} attemptid - Attempt Id\r\n * @param {boolean} mainimage - boolean value\r\n */\r\nfunction setupFaceMesh(videoElement, canvasElement, cmid, attemptid, mainimage) {\r\n    const canvasCtx = canvasElement.getContext('2d');\r\n    const faceMesh = new FaceMesh({\r\n        locateFile: (file) => {\r\n            return `${M.cfg.wwwroot}/mod/quiz/accessrule/quizproctoring/libraries/facemesh/${file}`;\r\n        }\r\n    });\r\n    faceMesh.setOptions({\r\n        maxNumFaces: 5,\r\n        refineLandmarks: true,\r\n    });\r\n    faceMesh.onResults((results) => {console.log(results);\r\n        canvasCtx.save();\r\n        canvasCtx.clearRect(0, 0, canvasElement.width, canvasElement.height);\r\n        canvasCtx.drawImage(results.image, 0, 0, canvasElement.width, canvasElement.height);\r\n        var data = canvasElement.toDataURL('image/png');            \r\n        if (typeof results.multiFaceLandmarks === 'undefined') {\r\n            realtimeDetection(cmid, attemptid, mainimage, 'noface', data);\r\n        } else {\r\n            if (results.multiFaceLandmarks) {\r\n                console.log(\"Number of faces detected: \", results.multiFaceLandmarks.length);\r\n                if(results.multiFaceLandmarks.length > 1) {                    \r\n                    realtimeDetection(cmid, attemptid, mainimage, 'multiface', data);\r\n                }\r\n                results.multiFaceLandmarks.forEach(landmarks => {\r\n                    detectGazeDirection(landmarks);\r\n                    detectEyeStatus(landmarks);\r\n\r\n                });\r\n            }\r\n        }\r\n        canvasCtx.restore();\r\n    });\r\n    faceMesh.send({image: videoElement});\r\n\r\n    function realtimeDetection(cmid, attemptid, mainimage, face, data) {\r\n        var requestData = {\r\n            cmid: cmid,\r\n            attemptid: attemptid,\r\n            mainimage: mainimage,\r\n            validate: face,\r\n            imgBase64: data,\r\n        };\r\n        $.ajax({\r\n            url: M.cfg.wwwroot + '/mod/quiz/accessrule/quizproctoring/ajax_realtime.php',\r\n            method: 'POST',\r\n            data: requestData,\r\n            success: function(response) {\r\n                if (response && response.errorcode) {\r\n                    $(document).trigger('popup', response.error);\r\n                } else {\r\n                    if (response.redirect && response.url) {\r\n                        window.onbeforeunload = null;\r\n                        $(document).trigger('popup', response.msg);\r\n                        setTimeout(function() {\r\n                            window.location.href = encodeURI(response.url);\r\n                        }, 3000);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    function detectGazeDirection(landmarks) {\r\n        const leftEye = landmarks[33];\r\n        const rightEye = landmarks[263];\r\n        const nose = landmarks[1];\r\n        const eyeMidpointX = (leftEye.x + rightEye.x) / 2;\r\n        const noseX = nose.x;\r\n\r\n        let currentDirection = \"Center\";\r\n\r\n        if (noseX < eyeMidpointX - 0.02) {\r\n            currentDirection = \"Right\";\r\n        } else if (noseX > eyeMidpointX + 0.02) {\r\n            currentDirection = \"Left\";\r\n        }\r\n\r\n        if (currentDirection !== gazeDirection) {\r\n            gazeDirection = currentDirection;\r\n\r\n            if (gazeTimer) {\r\n                clearTimeout(gazeTimer);\r\n                gazeTimer = null;\r\n            }\r\n        }\r\n\r\n        if (gazeDirection !== \"Center\") {\r\n            if (!gazeTimer) {\r\n                gazeTimer = setTimeout(() => {\r\n                    console.log(\"WARNING: Looking \" + gazeDirection + \" for more than 2 seconds\");\r\n                }, GAZE_THRESHOLD);\r\n            }\r\n        } else {\r\n            if (gazeTimer) {\r\n                clearTimeout(gazeTimer);\r\n                gazeTimer = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    function detectEyeStatus(landmarks) {\r\n        const leftEyeUpper = landmarks[159];\r\n        const leftEyeLower = landmarks[145];\r\n        const rightEyeUpper = landmarks[386];\r\n        const rightEyeLower = landmarks[374];\r\n\r\n        const leftEyeOpen = Math.abs(leftEyeUpper.y - leftEyeLower.y);\r\n        const rightEyeOpen = Math.abs(rightEyeUpper.y - rightEyeLower.y);\r\n\r\n        const EYE_OPEN_THRESHOLD = 0.018;\r\n\r\n        let currentEyeStatus = (leftEyeOpen > EYE_OPEN_THRESHOLD &&\r\n            rightEyeOpen > EYE_OPEN_THRESHOLD) ? \"Open\" : \"Closed\";\r\n        if (currentEyeStatus !== eyeStatus) {\r\n            eyeStatus = currentEyeStatus;\r\n            if (eyeTimer) {\r\n                clearTimeout(eyeTimer);\r\n                eyeTimer = null;\r\n            }\r\n        }\r\n        if (eyeStatus === \"Closed\") {\r\n            if (!eyeTimer) {\r\n                eyeTimer = setTimeout(() => {\r\n                    console.log('\"EyesOpen\": {\"Value\": false}');\r\n                    console.log(\"WARNING: Eyes closed for more than 3 seconds\");\r\n                }, EYE_THRESHOLD);\r\n            }\r\n        } else {\r\n            if (eyeTimer) {\r\n                clearTimeout(eyeTimer);\r\n                eyeTimer = null;\r\n            }\r\n        }\r\n    }\r\n}\r\n});\r\n"],"names":["window","addEventListener","event","stopImmediatePropagation","returnValue","define","$","str","ModalFactory","prop","Camera","cmid","mainimage","attemptid","quizid","docElement","document","video","getElementById","this","videoid","canvas","canvasid","on","showpopup","bind","prototype","width","height","takepictureid","retakeid","startcamera","takePictureButton","navigator","mediaDevices","getUserMedia","audio","then","stream","videoElement","srcObject","muted","playsinline","localMediaStream","play","e","preventDefault","getVideoTracks","onended","trigger","audioTrack","getAudioTracks","savedPosition","JSON","parse","localStorage","getItem","offsetX","offsetY","style","left","top","isDragging","clientX","getBoundingClientRect","clientY","zIndex","position","setItem","stringify","catch","takepicture","getContext","drawImage","data","toDataURL","hide","show","val","ajax","url","M","cfg","wwwroot","method","imgBase64","success","response","errorcode","error","proctoringimage","requestData","redirect","onbeforeunload","msg","setTimeout","location","href","encodeURI","resetcamera","clearRect","signalingSocket","peers","peerId","peerMediaElements","connectedPeers","attachMediaStream","gazeDirection","gazeTimer","eyeStatus","eyeTimer","ICE_SERVERS","urls","retake","message","activeModal","destroy","create","body","modal","stopcamera","getTracks","forEach","track","stop","init","verifyduringattempt","teacher","serviceoption","userfullname","enablestudentvideo","setinterval","camera","ctrlKey","metaKey","key","io","storedSession","sessionState","setupLocalMedia","typet","getTeacherroom","fullname","emit","restoreSessionState","remove","close","config","peer_id","peerConnection","RTCPeerConnection","MediaStream","onicecandidate","candidate","sdpMLineIndex","ontrack","remoteMedia","addTrack","attr","length","append","addClass","studentContainer","studentNameText","text","addStream","should_create_offer","createOffer","localDescription","setLocalDescription","peer","remoteDescription","session_description","desc","RTCSessionDescription","setRemoteDescription","type","createAnswer","iceCandidate","ice_candidate","addIceCandidate","RTCIceCandidate","removeStream","closest","readyState","removeItem","callback","require","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","element","id","appendTo","css","visibilityState","tab","setInterval","canvasElement","processFrame","console","warn","canvasCtx","faceMesh","FaceMesh","locateFile","file","realtimeDetection","face","validate","detectGazeDirection","landmarks","leftEye","rightEye","nose","eyeMidpointX","x","noseX","currentDirection","clearTimeout","log","detectEyeStatus","leftEyeUpper","leftEyeLower","rightEyeUpper","rightEyeLower","leftEyeOpen","Math","abs","y","rightEyeOpen","EYE_OPEN_THRESHOLD","currentEyeStatus","setOptions","maxNumFaces","refineLandmarks","onResults","results","save","image","multiFaceLandmarks","restore","send","setupFaceMesh","finally","URLSearchParams","search","get","hasOwnProperty","setupPeerConnection"],"mappings":"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"}