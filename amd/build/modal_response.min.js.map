{"version":3,"file":"modal_response.min.js","sources":["../src/modal_response.js"],"sourcesContent":["define(['jquery', 'core/notification', 'core/custom_interaction_events', 'core/modal', 'core/modal_registry'],\n    function($, Notification, CustomEvents, Modal, ModalRegistry) {\n\n        var registered = false;\n        var SELECTORS = {\n            PREVIOUS_BUTTON: '[data-action=\"previous\"]',\n            NEXT_BUTTON: '[data-action=\"next\"]',\n        };\n\n        /**\n         * Constructor for the Modal.\n         *\n         * @param {object} root The root jQuery element for the modal\n         */\n        var ModalResponse = function(root) {\n            Modal.call(this, root);\n\n            if (!this.getFooter().find(SELECTORS.PREVIOUS_BUTTON).length) {\n                 Notification.exception({message: 'No previous button found'});\n            }\n\n            if (!this.getFooter().find(SELECTORS.NEXT_BUTTON).length) {\n                Notification.exception({message: 'No next button found'});\n            }\n        };\n\n        ModalResponse.TYPE = 'quizaccess_quizproctoring-response';\n        ModalResponse.prototype = Object.create(Modal.prototype);\n        ModalResponse.prototype.constructor = ModalResponse;\n\n        /**\n         * Set up all of the event handling for the modal.\n         *\n         * @method registerEventListeners\n         */\n        ModalResponse.prototype.registerEventListeners = function() {\n            // Apply parent event listeners.\n            Modal.prototype.registerEventListeners.call(this);\n            this.getModal().on(CustomEvents.events.activate, SELECTORS.PREVIOUS_BUTTON, function(e) {\n                $(document).trigger('prev');\n                e.preventDefault();\n            });\n            this.getModal().on(CustomEvents.events.activate, SELECTORS.NEXT_BUTTON, function(e) {\n                $(document).trigger('next');\n                e.preventDefault();\n            });\n        };\n\n        // Automatically register with the modal registry the first time this module is imported so that you can create modals\n        // of this type using the modal factory.\n        if (!registered) {\n            ModalRegistry.register(ModalResponse.TYPE, ModalResponse, 'quizaccess_quizproctoring/response_modal');\n            registered = true;\n        }\n\n        return ModalResponse;\n    });"],"names":["define","$","Notification","CustomEvents","Modal","ModalRegistry","registered","SELECTORS","ModalResponse","root","call","this","getFooter","find","length","exception","message","TYPE","prototype","Object","create","constructor","registerEventListeners","getModal","on","events","activate","e","document","trigger","preventDefault","register"],"mappings":"AAAAA,kDAAO,CAAC,SAAU,oBAAqB,iCAAkC,aAAc,wBACnF,SAASC,EAAGC,aAAcC,aAAcC,MAAOC,mBAEvCC,YAAa,EACbC,0BACiB,2BADjBA,sBAEa,uBAQbC,cAAgB,SAASC,MACzBL,MAAMM,KAAKC,KAAMF,MAEZE,KAAKC,YAAYC,KAAKN,2BAA2BO,QACjDZ,aAAaa,UAAU,CAACC,QAAS,6BAGjCL,KAAKC,YAAYC,KAAKN,uBAAuBO,QAC9CZ,aAAaa,UAAU,CAACC,QAAS,iCAIzCR,cAAcS,KAAO,sCACrBT,cAAcU,UAAYC,OAAOC,OAAOhB,MAAMc,YACtBG,YAAcb,cAOtCA,cAAcU,UAAUI,uBAAyB,WAE7ClB,MAAMc,UAAUI,uBAAuBZ,KAAKC,WACvCY,WAAWC,GAAGrB,aAAasB,OAAOC,SAAUnB,2BAA2B,SAASoB,GACjF1B,EAAE2B,UAAUC,QAAQ,QACpBF,EAAEG,yBAEDP,WAAWC,GAAGrB,aAAasB,OAAOC,SAAUnB,uBAAuB,SAASoB,GAC7E1B,EAAE2B,UAAUC,QAAQ,QACpBF,EAAEG,qBAMLxB,aACDD,cAAc0B,SAASvB,cAAcS,KAAMT,cAAe,4CAC1DF,YAAa,GAGVE"}